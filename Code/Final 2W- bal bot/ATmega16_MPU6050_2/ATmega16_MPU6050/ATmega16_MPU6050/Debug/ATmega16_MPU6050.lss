
ATmega16_MPU6050.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001b14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000060  00800060  00001b14  00001ba8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000a6  008000c0  008000c0  00001c08  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c08  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001c64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020b8  00000000  00000000  00001e10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3b  00000000  00000000  00003ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010fa  00000000  00000000  00004a03  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000538  00000000  00000000  00005b00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000748  00000000  00000000  00006038  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001262  00000000  00000000  00006780  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  000079e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	03 6e       	ori	r16, 0xE3	; 227
      56:	db 36       	cpi	r29, 0x6B	; 107
      58:	3d 9a       	sbi	0x07, 5	; 7
      5a:	99 99       	sbic	0x13, 1	; 19
      5c:	99 3d       	cpi	r25, 0xD9	; 217
      5e:	ab aa       	std	Y+51, r10	; 0x33
      60:	aa 2a       	or	r10, r26
      62:	3e 00       	.word	0x003e	; ????
      64:	00 00       	nop
      66:	80 3f       	cpi	r24, 0xF0	; 240
      68:	07 2c       	mov	r0, r7
      6a:	7a a5       	ldd	r23, Y+42	; 0x2a
      6c:	ba 6c       	ori	r27, 0xCA	; 202
      6e:	c5 90       	lpm	r12, Z+
      70:	da 3b       	cpi	r29, 0xBA	; 186
      72:	93 65       	ori	r25, 0x53	; 83
      74:	fc 8b       	std	Y+20, r31	; 0x14
      76:	bc 53       	subi	r27, 0x3C	; 60
      78:	f8 10       	cpse	r15, r8
      7a:	fd 3c       	cpi	r31, 0xCD	; 205
      7c:	56 92       	lac	Z, r5
      7e:	83 4d       	sbci	r24, 0xD3	; 211
      80:	bd 87       	std	Y+13, r27	; 0x0d
      82:	9d 3a       	cpi	r25, 0xAD	; 173
      84:	b6 3d       	cpi	r27, 0xD6	; 214
      86:	cb c9       	rjmp	.-3178   	; 0xfffff41e <__eeprom_end+0xff7ef41e>
      88:	bf 5b       	subi	r27, 0xBF	; 191
      8a:	be 73       	andi	r27, 0x3E	; 62
      8c:	da 0f       	add	r29, r26
      8e:	c9 3f       	cpi	r28, 0xF9	; 249

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf e5       	ldi	r28, 0x5F	; 95
      96:	d4 e0       	ldi	r29, 0x04	; 4
      98:	de bf       	out	0x3e, r29	; 62
      9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_copy_data>:
      9c:	10 e0       	ldi	r17, 0x00	; 0
      9e:	a0 e6       	ldi	r26, 0x60	; 96
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	e4 e1       	ldi	r30, 0x14	; 20
      a4:	fb e1       	ldi	r31, 0x1B	; 27
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 3c       	cpi	r26, 0xC0	; 192
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	a0 ec       	ldi	r26, 0xC0	; 192
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a6 36       	cpi	r26, 0x66	; 102
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 92 07 	call	0xf24	; 0xf24 <main>
      c6:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <I2C_Init>:
      ce:	11 b8       	out	0x01, r1	; 1
      d0:	80 e2       	ldi	r24, 0x20	; 32
      d2:	80 b9       	out	0x00, r24	; 0
      d4:	08 95       	ret

000000d6 <I2C_Repeated_Start>:
      d6:	94 ea       	ldi	r25, 0xA4	; 164
      d8:	96 bf       	out	0x36, r25	; 54
      da:	06 b6       	in	r0, 0x36	; 54
      dc:	07 fe       	sbrs	r0, 7
      de:	fd cf       	rjmp	.-6      	; 0xda <I2C_Repeated_Start+0x4>
      e0:	91 b1       	in	r25, 0x01	; 1
      e2:	98 7f       	andi	r25, 0xF8	; 248
      e4:	90 31       	cpi	r25, 0x10	; 16
      e6:	71 f4       	brne	.+28     	; 0x104 <I2C_Repeated_Start+0x2e>
      e8:	83 b9       	out	0x03, r24	; 3
      ea:	84 e8       	ldi	r24, 0x84	; 132
      ec:	86 bf       	out	0x36, r24	; 54
      ee:	06 b6       	in	r0, 0x36	; 54
      f0:	07 fe       	sbrs	r0, 7
      f2:	fd cf       	rjmp	.-6      	; 0xee <I2C_Repeated_Start+0x18>
      f4:	81 b1       	in	r24, 0x01	; 1
      f6:	88 7f       	andi	r24, 0xF8	; 248
      f8:	80 34       	cpi	r24, 0x40	; 64
      fa:	31 f0       	breq	.+12     	; 0x108 <I2C_Repeated_Start+0x32>
      fc:	80 32       	cpi	r24, 0x20	; 32
      fe:	31 f0       	breq	.+12     	; 0x10c <I2C_Repeated_Start+0x36>
     100:	83 e0       	ldi	r24, 0x03	; 3
     102:	08 95       	ret
     104:	80 e0       	ldi	r24, 0x00	; 0
     106:	08 95       	ret
     108:	81 e0       	ldi	r24, 0x01	; 1
     10a:	08 95       	ret
     10c:	82 e0       	ldi	r24, 0x02	; 2
     10e:	08 95       	ret

00000110 <I2C_Stop>:
     110:	84 e9       	ldi	r24, 0x94	; 148
     112:	86 bf       	out	0x36, r24	; 54
     114:	06 b6       	in	r0, 0x36	; 54
     116:	04 fc       	sbrc	r0, 4
     118:	fd cf       	rjmp	.-6      	; 0x114 <I2C_Stop+0x4>
     11a:	08 95       	ret

0000011c <I2C_Start_Wait>:
     11c:	1f 93       	push	r17
     11e:	cf 93       	push	r28
     120:	df 93       	push	r29
     122:	18 2f       	mov	r17, r24
     124:	c4 ea       	ldi	r28, 0xA4	; 164
     126:	d4 e8       	ldi	r29, 0x84	; 132
     128:	c6 bf       	out	0x36, r28	; 54
     12a:	06 b6       	in	r0, 0x36	; 54
     12c:	07 fe       	sbrs	r0, 7
     12e:	fd cf       	rjmp	.-6      	; 0x12a <I2C_Start_Wait+0xe>
     130:	91 b1       	in	r25, 0x01	; 1
     132:	98 7f       	andi	r25, 0xF8	; 248
     134:	98 30       	cpi	r25, 0x08	; 8
     136:	c1 f7       	brne	.-16     	; 0x128 <I2C_Start_Wait+0xc>
     138:	13 b9       	out	0x03, r17	; 3
     13a:	d6 bf       	out	0x36, r29	; 54
     13c:	06 b6       	in	r0, 0x36	; 54
     13e:	07 fe       	sbrs	r0, 7
     140:	fd cf       	rjmp	.-6      	; 0x13c <I2C_Start_Wait+0x20>
     142:	91 b1       	in	r25, 0x01	; 1
     144:	98 7f       	andi	r25, 0xF8	; 248
     146:	98 31       	cpi	r25, 0x18	; 24
     148:	19 f0       	breq	.+6      	; 0x150 <I2C_Start_Wait+0x34>
     14a:	0e 94 88 00 	call	0x110	; 0x110 <I2C_Stop>
     14e:	ec cf       	rjmp	.-40     	; 0x128 <I2C_Start_Wait+0xc>
     150:	df 91       	pop	r29
     152:	cf 91       	pop	r28
     154:	1f 91       	pop	r17
     156:	08 95       	ret

00000158 <I2C_Write>:
     158:	83 b9       	out	0x03, r24	; 3
     15a:	84 e8       	ldi	r24, 0x84	; 132
     15c:	86 bf       	out	0x36, r24	; 54
     15e:	06 b6       	in	r0, 0x36	; 54
     160:	07 fe       	sbrs	r0, 7
     162:	fd cf       	rjmp	.-6      	; 0x15e <I2C_Write+0x6>
     164:	81 b1       	in	r24, 0x01	; 1
     166:	88 7f       	andi	r24, 0xF8	; 248
     168:	88 32       	cpi	r24, 0x28	; 40
     16a:	21 f0       	breq	.+8      	; 0x174 <I2C_Write+0x1c>
     16c:	80 33       	cpi	r24, 0x30	; 48
     16e:	21 f0       	breq	.+8      	; 0x178 <I2C_Write+0x20>
     170:	82 e0       	ldi	r24, 0x02	; 2
     172:	08 95       	ret
     174:	80 e0       	ldi	r24, 0x00	; 0
     176:	08 95       	ret
     178:	81 e0       	ldi	r24, 0x01	; 1
     17a:	08 95       	ret

0000017c <I2C_Read_Ack>:
     17c:	84 ec       	ldi	r24, 0xC4	; 196
     17e:	86 bf       	out	0x36, r24	; 54
     180:	06 b6       	in	r0, 0x36	; 54
     182:	07 fe       	sbrs	r0, 7
     184:	fd cf       	rjmp	.-6      	; 0x180 <I2C_Read_Ack+0x4>
     186:	83 b1       	in	r24, 0x03	; 3
     188:	08 95       	ret

0000018a <I2C_Read_Nack>:
     18a:	84 e8       	ldi	r24, 0x84	; 132
     18c:	86 bf       	out	0x36, r24	; 54
     18e:	06 b6       	in	r0, 0x36	; 54
     190:	07 fe       	sbrs	r0, 7
     192:	fd cf       	rjmp	.-6      	; 0x18e <I2C_Read_Nack+0x4>
     194:	83 b1       	in	r24, 0x03	; 3
     196:	08 95       	ret

00000198 <pulse>:
     198:	c2 9a       	sbi	0x18, 2	; 24
     19a:	82 e0       	ldi	r24, 0x02	; 2
     19c:	8a 95       	dec	r24
     19e:	f1 f7       	brne	.-4      	; 0x19c <pulse+0x4>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <pulse+0xa>
     1a2:	c2 98       	cbi	0x18, 2	; 24
     1a4:	85 e8       	ldi	r24, 0x85	; 133
     1a6:	8a 95       	dec	r24
     1a8:	f1 f7       	brne	.-4      	; 0x1a6 <pulse+0xe>
     1aa:	00 00       	nop
     1ac:	08 95       	ret

000001ae <lcd_write>:
     1ae:	cf 93       	push	r28
     1b0:	c8 2f       	mov	r28, r24
     1b2:	88 23       	and	r24, r24
     1b4:	14 f4       	brge	.+4      	; 0x1ba <lcd_write+0xc>
     1b6:	c0 9a       	sbi	0x18, 0	; 24
     1b8:	01 c0       	rjmp	.+2      	; 0x1bc <lcd_write+0xe>
     1ba:	c0 98       	cbi	0x18, 0	; 24
     1bc:	c6 ff       	sbrs	r28, 6
     1be:	02 c0       	rjmp	.+4      	; 0x1c4 <lcd_write+0x16>
     1c0:	96 9a       	sbi	0x12, 6	; 18
     1c2:	01 c0       	rjmp	.+2      	; 0x1c6 <lcd_write+0x18>
     1c4:	96 98       	cbi	0x12, 6	; 18
     1c6:	c5 ff       	sbrs	r28, 5
     1c8:	02 c0       	rjmp	.+4      	; 0x1ce <lcd_write+0x20>
     1ca:	c4 9a       	sbi	0x18, 4	; 24
     1cc:	01 c0       	rjmp	.+2      	; 0x1d0 <lcd_write+0x22>
     1ce:	c4 98       	cbi	0x18, 4	; 24
     1d0:	c4 ff       	sbrs	r28, 4
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <lcd_write+0x2a>
     1d4:	c3 9a       	sbi	0x18, 3	; 24
     1d6:	01 c0       	rjmp	.+2      	; 0x1da <lcd_write+0x2c>
     1d8:	c3 98       	cbi	0x18, 3	; 24
     1da:	c1 9a       	sbi	0x18, 1	; 24
     1dc:	0e 94 cc 00 	call	0x198	; 0x198 <pulse>
     1e0:	c3 ff       	sbrs	r28, 3
     1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <lcd_write+0x3a>
     1e4:	c0 9a       	sbi	0x18, 0	; 24
     1e6:	01 c0       	rjmp	.+2      	; 0x1ea <lcd_write+0x3c>
     1e8:	c0 98       	cbi	0x18, 0	; 24
     1ea:	c2 ff       	sbrs	r28, 2
     1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <lcd_write+0x44>
     1ee:	96 9a       	sbi	0x12, 6	; 18
     1f0:	01 c0       	rjmp	.+2      	; 0x1f4 <lcd_write+0x46>
     1f2:	96 98       	cbi	0x12, 6	; 18
     1f4:	c1 ff       	sbrs	r28, 1
     1f6:	02 c0       	rjmp	.+4      	; 0x1fc <lcd_write+0x4e>
     1f8:	c4 9a       	sbi	0x18, 4	; 24
     1fa:	01 c0       	rjmp	.+2      	; 0x1fe <lcd_write+0x50>
     1fc:	c4 98       	cbi	0x18, 4	; 24
     1fe:	c0 ff       	sbrs	r28, 0
     200:	02 c0       	rjmp	.+4      	; 0x206 <lcd_write+0x58>
     202:	c3 9a       	sbi	0x18, 3	; 24
     204:	01 c0       	rjmp	.+2      	; 0x208 <lcd_write+0x5a>
     206:	c3 98       	cbi	0x18, 3	; 24
     208:	c1 9a       	sbi	0x18, 1	; 24
     20a:	0e 94 cc 00 	call	0x198	; 0x198 <pulse>
     20e:	cf 91       	pop	r28
     210:	08 95       	ret

00000212 <lcd_cmd>:
     212:	cf 93       	push	r28
     214:	c8 2f       	mov	r28, r24
     216:	88 23       	and	r24, r24
     218:	14 f4       	brge	.+4      	; 0x21e <lcd_cmd+0xc>
     21a:	c0 9a       	sbi	0x18, 0	; 24
     21c:	01 c0       	rjmp	.+2      	; 0x220 <lcd_cmd+0xe>
     21e:	c0 98       	cbi	0x18, 0	; 24
     220:	c6 ff       	sbrs	r28, 6
     222:	02 c0       	rjmp	.+4      	; 0x228 <lcd_cmd+0x16>
     224:	96 9a       	sbi	0x12, 6	; 18
     226:	01 c0       	rjmp	.+2      	; 0x22a <lcd_cmd+0x18>
     228:	96 98       	cbi	0x12, 6	; 18
     22a:	c5 ff       	sbrs	r28, 5
     22c:	02 c0       	rjmp	.+4      	; 0x232 <lcd_cmd+0x20>
     22e:	c4 9a       	sbi	0x18, 4	; 24
     230:	01 c0       	rjmp	.+2      	; 0x234 <lcd_cmd+0x22>
     232:	c4 98       	cbi	0x18, 4	; 24
     234:	c4 ff       	sbrs	r28, 4
     236:	02 c0       	rjmp	.+4      	; 0x23c <lcd_cmd+0x2a>
     238:	c3 9a       	sbi	0x18, 3	; 24
     23a:	01 c0       	rjmp	.+2      	; 0x23e <lcd_cmd+0x2c>
     23c:	c3 98       	cbi	0x18, 3	; 24
     23e:	c1 98       	cbi	0x18, 1	; 24
     240:	0e 94 cc 00 	call	0x198	; 0x198 <pulse>
     244:	c3 ff       	sbrs	r28, 3
     246:	02 c0       	rjmp	.+4      	; 0x24c <lcd_cmd+0x3a>
     248:	c0 9a       	sbi	0x18, 0	; 24
     24a:	01 c0       	rjmp	.+2      	; 0x24e <lcd_cmd+0x3c>
     24c:	c0 98       	cbi	0x18, 0	; 24
     24e:	c2 ff       	sbrs	r28, 2
     250:	02 c0       	rjmp	.+4      	; 0x256 <lcd_cmd+0x44>
     252:	96 9a       	sbi	0x12, 6	; 18
     254:	01 c0       	rjmp	.+2      	; 0x258 <lcd_cmd+0x46>
     256:	96 98       	cbi	0x12, 6	; 18
     258:	c1 ff       	sbrs	r28, 1
     25a:	02 c0       	rjmp	.+4      	; 0x260 <lcd_cmd+0x4e>
     25c:	c4 9a       	sbi	0x18, 4	; 24
     25e:	01 c0       	rjmp	.+2      	; 0x262 <lcd_cmd+0x50>
     260:	c4 98       	cbi	0x18, 4	; 24
     262:	c0 ff       	sbrs	r28, 0
     264:	02 c0       	rjmp	.+4      	; 0x26a <lcd_cmd+0x58>
     266:	c3 9a       	sbi	0x18, 3	; 24
     268:	01 c0       	rjmp	.+2      	; 0x26c <lcd_cmd+0x5a>
     26a:	c3 98       	cbi	0x18, 3	; 24
     26c:	c1 98       	cbi	0x18, 1	; 24
     26e:	0e 94 cc 00 	call	0x198	; 0x198 <pulse>
     272:	cf 91       	pop	r28
     274:	08 95       	ret

00000276 <lcd_home>:
     276:	80 e8       	ldi	r24, 0x80	; 128
     278:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     27c:	8f e6       	ldi	r24, 0x6F	; 111
     27e:	97 e1       	ldi	r25, 0x17	; 23
     280:	01 97       	sbiw	r24, 0x01	; 1
     282:	f1 f7       	brne	.-4      	; 0x280 <lcd_home+0xa>
     284:	00 c0       	rjmp	.+0      	; 0x286 <lcd_home+0x10>
     286:	00 00       	nop
     288:	08 95       	ret

0000028a <lcd_gotoxy>:
     28a:	82 30       	cpi	r24, 0x02	; 2
     28c:	71 f0       	breq	.+28     	; 0x2aa <lcd_gotoxy+0x20>
     28e:	18 f4       	brcc	.+6      	; 0x296 <lcd_gotoxy+0xc>
     290:	81 30       	cpi	r24, 0x01	; 1
     292:	31 f0       	breq	.+12     	; 0x2a0 <lcd_gotoxy+0x16>
     294:	19 c0       	rjmp	.+50     	; 0x2c8 <lcd_gotoxy+0x3e>
     296:	83 30       	cpi	r24, 0x03	; 3
     298:	69 f0       	breq	.+26     	; 0x2b4 <lcd_gotoxy+0x2a>
     29a:	84 30       	cpi	r24, 0x04	; 4
     29c:	81 f0       	breq	.+32     	; 0x2be <lcd_gotoxy+0x34>
     29e:	14 c0       	rjmp	.+40     	; 0x2c8 <lcd_gotoxy+0x3e>
     2a0:	8f e7       	ldi	r24, 0x7F	; 127
     2a2:	86 0f       	add	r24, r22
     2a4:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     2a8:	08 95       	ret
     2aa:	8f eb       	ldi	r24, 0xBF	; 191
     2ac:	86 0f       	add	r24, r22
     2ae:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     2b2:	08 95       	ret
     2b4:	8f e8       	ldi	r24, 0x8F	; 143
     2b6:	86 0f       	add	r24, r22
     2b8:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     2bc:	08 95       	ret
     2be:	8f ec       	ldi	r24, 0xCF	; 207
     2c0:	86 0f       	add	r24, r22
     2c2:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     2c6:	08 95       	ret
     2c8:	0e 94 3b 01 	call	0x276	; 0x276 <lcd_home>
     2cc:	08 95       	ret

000002ce <lcd_string>:
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
     2d2:	ec 01       	movw	r28, r24
     2d4:	88 81       	ld	r24, Y
     2d6:	88 23       	and	r24, r24
     2d8:	31 f0       	breq	.+12     	; 0x2e6 <lcd_string+0x18>
     2da:	21 96       	adiw	r28, 0x01	; 1
     2dc:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_write>
     2e0:	89 91       	ld	r24, Y+
     2e2:	81 11       	cpse	r24, r1
     2e4:	fb cf       	rjmp	.-10     	; 0x2dc <lcd_string+0xe>
     2e6:	df 91       	pop	r29
     2e8:	cf 91       	pop	r28
     2ea:	08 95       	ret

000002ec <lcd_float>:
     2ec:	8f 92       	push	r8
     2ee:	9f 92       	push	r9
     2f0:	af 92       	push	r10
     2f2:	bf 92       	push	r11
     2f4:	ef 92       	push	r14
     2f6:	ff 92       	push	r15
     2f8:	0f 93       	push	r16
     2fa:	1f 93       	push	r17
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
     304:	28 97       	sbiw	r28, 0x08	; 8
     306:	0f b6       	in	r0, 0x3f	; 63
     308:	f8 94       	cli
     30a:	de bf       	out	0x3e, r29	; 62
     30c:	0f be       	out	0x3f, r0	; 63
     30e:	cd bf       	out	0x3d, r28	; 61
     310:	4b 01       	movw	r8, r22
     312:	5c 01       	movw	r10, r24
     314:	0e 94 a0 08 	call	0x1140	; 0x1140 <__fixsfsi>
     318:	16 2f       	mov	r17, r22
     31a:	07 2f       	mov	r16, r23
     31c:	f8 2e       	mov	r15, r24
     31e:	e9 2e       	mov	r14, r25
     320:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     324:	9b 01       	movw	r18, r22
     326:	ac 01       	movw	r20, r24
     328:	c5 01       	movw	r24, r10
     32a:	b4 01       	movw	r22, r8
     32c:	0e 94 a1 07 	call	0xf42	; 0xf42 <__subsf3>
     330:	20 e0       	ldi	r18, 0x00	; 0
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	48 ec       	ldi	r20, 0xC8	; 200
     336:	52 e4       	ldi	r21, 0x42	; 66
     338:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     33c:	0e 94 a0 08 	call	0x1140	; 0x1140 <__fixsfsi>
     340:	4b 01       	movw	r8, r22
     342:	5c 01       	movw	r10, r24
     344:	99 23       	and	r25, r25
     346:	3c f4       	brge	.+14     	; 0x356 <lcd_float+0x6a>
     348:	88 24       	eor	r8, r8
     34a:	99 24       	eor	r9, r9
     34c:	54 01       	movw	r10, r8
     34e:	86 1a       	sub	r8, r22
     350:	97 0a       	sbc	r9, r23
     352:	a8 0a       	sbc	r10, r24
     354:	b9 0a       	sbc	r11, r25
     356:	bf 92       	push	r11
     358:	af 92       	push	r10
     35a:	9f 92       	push	r9
     35c:	8f 92       	push	r8
     35e:	ef 92       	push	r14
     360:	ff 92       	push	r15
     362:	0f 93       	push	r16
     364:	1f 93       	push	r17
     366:	8d e6       	ldi	r24, 0x6D	; 109
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	9f 93       	push	r25
     36c:	8f 93       	push	r24
     36e:	8e 01       	movw	r16, r28
     370:	0f 5f       	subi	r16, 0xFF	; 255
     372:	1f 4f       	sbci	r17, 0xFF	; 255
     374:	1f 93       	push	r17
     376:	0f 93       	push	r16
     378:	0e 94 b0 0a 	call	0x1560	; 0x1560 <sprintf>
     37c:	c8 01       	movw	r24, r16
     37e:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_string>
     382:	0f b6       	in	r0, 0x3f	; 63
     384:	f8 94       	cli
     386:	de bf       	out	0x3e, r29	; 62
     388:	0f be       	out	0x3f, r0	; 63
     38a:	cd bf       	out	0x3d, r28	; 61
     38c:	28 96       	adiw	r28, 0x08	; 8
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	f8 94       	cli
     392:	de bf       	out	0x3e, r29	; 62
     394:	0f be       	out	0x3f, r0	; 63
     396:	cd bf       	out	0x3d, r28	; 61
     398:	df 91       	pop	r29
     39a:	cf 91       	pop	r28
     39c:	1f 91       	pop	r17
     39e:	0f 91       	pop	r16
     3a0:	ff 90       	pop	r15
     3a2:	ef 90       	pop	r14
     3a4:	bf 90       	pop	r11
     3a6:	af 90       	pop	r10
     3a8:	9f 90       	pop	r9
     3aa:	8f 90       	pop	r8
     3ac:	08 95       	ret

000003ae <lcd_set_4bit>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ae:	2f e7       	ldi	r18, 0x7F	; 127
     3b0:	88 e3       	ldi	r24, 0x38	; 56
     3b2:	91 e0       	ldi	r25, 0x01	; 1
     3b4:	21 50       	subi	r18, 0x01	; 1
     3b6:	80 40       	sbci	r24, 0x00	; 0
     3b8:	90 40       	sbci	r25, 0x00	; 0
     3ba:	e1 f7       	brne	.-8      	; 0x3b4 <lcd_set_4bit+0x6>
     3bc:	00 c0       	rjmp	.+0      	; 0x3be <lcd_set_4bit+0x10>
     3be:	00 00       	nop
     3c0:	c1 98       	cbi	0x18, 1	; 24
     3c2:	c0 98       	cbi	0x18, 0	; 24
     3c4:	96 98       	cbi	0x12, 6	; 18
     3c6:	c4 9a       	sbi	0x18, 4	; 24
     3c8:	c3 9a       	sbi	0x18, 3	; 24
     3ca:	c2 9a       	sbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3cc:	22 e0       	ldi	r18, 0x02	; 2
     3ce:	2a 95       	dec	r18
     3d0:	f1 f7       	brne	.-4      	; 0x3ce <lcd_set_4bit+0x20>
     3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <lcd_set_4bit+0x26>
     3d4:	c2 98       	cbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3d6:	8f e0       	ldi	r24, 0x0F	; 15
     3d8:	97 e2       	ldi	r25, 0x27	; 39
     3da:	01 97       	sbiw	r24, 0x01	; 1
     3dc:	f1 f7       	brne	.-4      	; 0x3da <lcd_set_4bit+0x2c>
     3de:	00 c0       	rjmp	.+0      	; 0x3e0 <lcd_set_4bit+0x32>
     3e0:	00 00       	nop
     3e2:	c1 98       	cbi	0x18, 1	; 24
     3e4:	c0 98       	cbi	0x18, 0	; 24
     3e6:	96 98       	cbi	0x12, 6	; 18
     3e8:	c4 9a       	sbi	0x18, 4	; 24
     3ea:	c3 9a       	sbi	0x18, 3	; 24
     3ec:	c2 9a       	sbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ee:	92 e0       	ldi	r25, 0x02	; 2
     3f0:	9a 95       	dec	r25
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <lcd_set_4bit+0x42>
     3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <lcd_set_4bit+0x48>
     3f6:	c2 98       	cbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3f8:	8f e0       	ldi	r24, 0x0F	; 15
     3fa:	97 e2       	ldi	r25, 0x27	; 39
     3fc:	01 97       	sbiw	r24, 0x01	; 1
     3fe:	f1 f7       	brne	.-4      	; 0x3fc <lcd_set_4bit+0x4e>
     400:	00 c0       	rjmp	.+0      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     402:	00 00       	nop
     404:	c1 98       	cbi	0x18, 1	; 24
     406:	c0 98       	cbi	0x18, 0	; 24
     408:	96 98       	cbi	0x12, 6	; 18
     40a:	c4 9a       	sbi	0x18, 4	; 24
     40c:	c3 9a       	sbi	0x18, 3	; 24
     40e:	c2 9a       	sbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     410:	92 e0       	ldi	r25, 0x02	; 2
     412:	9a 95       	dec	r25
     414:	f1 f7       	brne	.-4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     416:	00 c0       	rjmp	.+0      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     418:	c2 98       	cbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     41a:	8f e0       	ldi	r24, 0x0F	; 15
     41c:	97 e2       	ldi	r25, 0x27	; 39
     41e:	01 97       	sbiw	r24, 0x01	; 1
     420:	f1 f7       	brne	.-4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     422:	00 c0       	rjmp	.+0      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     424:	00 00       	nop
     426:	c1 98       	cbi	0x18, 1	; 24
     428:	c0 98       	cbi	0x18, 0	; 24
     42a:	96 98       	cbi	0x12, 6	; 18
     42c:	c4 9a       	sbi	0x18, 4	; 24
     42e:	c3 98       	cbi	0x18, 3	; 24
     430:	c2 9a       	sbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     432:	92 e0       	ldi	r25, 0x02	; 2
     434:	9a 95       	dec	r25
     436:	f1 f7       	brne	.-4      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     438:	00 c0       	rjmp	.+0      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     43a:	c2 98       	cbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     43c:	8f e0       	ldi	r24, 0x0F	; 15
     43e:	97 e2       	ldi	r25, 0x27	; 39
     440:	01 97       	sbiw	r24, 0x01	; 1
     442:	f1 f7       	brne	.-4      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     444:	00 c0       	rjmp	.+0      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     446:	00 00       	nop
     448:	08 95       	ret

0000044a <lcd_init>:
     44a:	b9 9a       	sbi	0x17, 1	; 23
     44c:	ba 9a       	sbi	0x17, 2	; 23
     44e:	bb 9a       	sbi	0x17, 3	; 23
     450:	bc 9a       	sbi	0x17, 4	; 23
     452:	8e 9a       	sbi	0x11, 6	; 17
     454:	b8 9a       	sbi	0x17, 0	; 23
     456:	0e 94 d7 01 	call	0x3ae	; 0x3ae <lcd_set_4bit>
     45a:	88 e2       	ldi	r24, 0x28	; 40
     45c:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     460:	8f e0       	ldi	r24, 0x0F	; 15
     462:	97 e2       	ldi	r25, 0x27	; 39
     464:	01 97       	sbiw	r24, 0x01	; 1
     466:	f1 f7       	brne	.-4      	; 0x464 <__stack+0x5>
     468:	00 c0       	rjmp	.+0      	; 0x46a <__stack+0xb>
     46a:	00 00       	nop
     46c:	8e e0       	ldi	r24, 0x0E	; 14
     46e:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     472:	8f e0       	ldi	r24, 0x0F	; 15
     474:	97 e2       	ldi	r25, 0x27	; 39
     476:	01 97       	sbiw	r24, 0x01	; 1
     478:	f1 f7       	brne	.-4      	; 0x476 <__stack+0x17>
     47a:	00 c0       	rjmp	.+0      	; 0x47c <__stack+0x1d>
     47c:	00 00       	nop
     47e:	81 e0       	ldi	r24, 0x01	; 1
     480:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     484:	8f e0       	ldi	r24, 0x0F	; 15
     486:	97 e2       	ldi	r25, 0x27	; 39
     488:	01 97       	sbiw	r24, 0x01	; 1
     48a:	f1 f7       	brne	.-4      	; 0x488 <__stack+0x29>
     48c:	00 c0       	rjmp	.+0      	; 0x48e <__stack+0x2f>
     48e:	00 00       	nop
     490:	86 e0       	ldi	r24, 0x06	; 6
     492:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     496:	8f e0       	ldi	r24, 0x0F	; 15
     498:	97 e2       	ldi	r25, 0x27	; 39
     49a:	01 97       	sbiw	r24, 0x01	; 1
     49c:	f1 f7       	brne	.-4      	; 0x49a <__stack+0x3b>
     49e:	00 c0       	rjmp	.+0      	; 0x4a0 <__stack+0x41>
     4a0:	00 00       	nop
     4a2:	80 e8       	ldi	r24, 0x80	; 128
     4a4:	0e 94 09 01 	call	0x212	; 0x212 <lcd_cmd>
     4a8:	8f e0       	ldi	r24, 0x0F	; 15
     4aa:	97 e2       	ldi	r25, 0x27	; 39
     4ac:	01 97       	sbiw	r24, 0x01	; 1
     4ae:	f1 f7       	brne	.-4      	; 0x4ac <__stack+0x4d>
     4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <__stack+0x53>
     4b2:	00 00       	nop
     4b4:	08 95       	ret

000004b6 <forward>:
	
}

float mapping(float var, float in_low, float in_max, float out_low,float out_max){
	return (var-in_low)*(out_max-out_low)/(in_max-in_low) + out_low;
}
     4b6:	90 9a       	sbi	0x12, 0	; 18
     4b8:	91 98       	cbi	0x12, 1	; 18
     4ba:	d8 9a       	sbi	0x1b, 0	; 27
     4bc:	d9 98       	cbi	0x1b, 1	; 27
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	9b bd       	out	0x2b, r25	; 43
     4c2:	8a bd       	out	0x2a, r24	; 42
     4c4:	70 e0       	ldi	r23, 0x00	; 0
     4c6:	79 bd       	out	0x29, r23	; 41
     4c8:	68 bd       	out	0x28, r22	; 40
     4ca:	08 95       	ret

000004cc <backward>:
     4cc:	91 9a       	sbi	0x12, 1	; 18
     4ce:	90 98       	cbi	0x12, 0	; 18
     4d0:	d9 9a       	sbi	0x1b, 1	; 27
     4d2:	d8 98       	cbi	0x1b, 0	; 27
     4d4:	af 98       	cbi	0x15, 7	; 21
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	9b bd       	out	0x2b, r25	; 43
     4da:	8a bd       	out	0x2a, r24	; 42
     4dc:	70 e0       	ldi	r23, 0x00	; 0
     4de:	79 bd       	out	0x29, r23	; 41
     4e0:	68 bd       	out	0x28, r22	; 40
     4e2:	08 95       	ret

000004e4 <init>:
     4e4:	1b ba       	out	0x1b, r1	; 27
     4e6:	8f ef       	ldi	r24, 0xFF	; 255
     4e8:	8a bb       	out	0x1a, r24	; 26
     4ea:	18 ba       	out	0x18, r1	; 24
     4ec:	87 bb       	out	0x17, r24	; 23
     4ee:	15 ba       	out	0x15, r1	; 21
     4f0:	84 bb       	out	0x14, r24	; 20
     4f2:	80 e8       	ldi	r24, 0x80	; 128
     4f4:	82 bb       	out	0x12, r24	; 18
     4f6:	9f e7       	ldi	r25, 0x7F	; 127
     4f8:	91 bb       	out	0x11, r25	; 17
     4fa:	13 be       	out	0x33, r1	; 51
     4fc:	12 be       	out	0x32, r1	; 50
     4fe:	1c be       	out	0x3c, r1	; 60
     500:	91 ea       	ldi	r25, 0xA1	; 161
     502:	9f bd       	out	0x2f, r25	; 47
     504:	9a e0       	ldi	r25, 0x0A	; 10
     506:	9e bd       	out	0x2e, r25	; 46
     508:	1d bc       	out	0x2d, r1	; 45
     50a:	1c bc       	out	0x2c, r1	; 44
     50c:	17 bc       	out	0x27, r1	; 39
     50e:	16 bc       	out	0x26, r1	; 38
     510:	1b bc       	out	0x2b, r1	; 43
     512:	1a bc       	out	0x2a, r1	; 42
     514:	19 bc       	out	0x29, r1	; 41
     516:	18 bc       	out	0x28, r1	; 40
     518:	12 bc       	out	0x22, r1	; 34
     51a:	15 bc       	out	0x25, r1	; 37
     51c:	14 bc       	out	0x24, r1	; 36
     51e:	13 bc       	out	0x23, r1	; 35
     520:	15 be       	out	0x35, r1	; 53
     522:	14 be       	out	0x34, r1	; 52
     524:	19 be       	out	0x39, r1	; 57
     526:	1a b8       	out	0x0a, r1	; 10
     528:	88 b9       	out	0x08, r24	; 8
     52a:	10 be       	out	0x30, r1	; 48
     52c:	16 b8       	out	0x06, r1	; 6
     52e:	1d b8       	out	0x0d, r1	; 13
     530:	16 be       	out	0x36, r1	; 54
     532:	08 95       	ret

00000534 <MPU6050_Init>:
     534:	2f e7       	ldi	r18, 0x7F	; 127
     536:	89 ea       	ldi	r24, 0xA9	; 169
     538:	93 e0       	ldi	r25, 0x03	; 3
     53a:	21 50       	subi	r18, 0x01	; 1
     53c:	80 40       	sbci	r24, 0x00	; 0
     53e:	90 40       	sbci	r25, 0x00	; 0
     540:	e1 f7       	brne	.-8      	; 0x53a <MPU6050_Init+0x6>
     542:	00 c0       	rjmp	.+0      	; 0x544 <MPU6050_Init+0x10>
     544:	00 00       	nop
     546:	80 ed       	ldi	r24, 0xD0	; 208
     548:	0e 94 8e 00 	call	0x11c	; 0x11c <I2C_Start_Wait>
     54c:	89 e1       	ldi	r24, 0x19	; 25
     54e:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     552:	87 e0       	ldi	r24, 0x07	; 7
     554:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     558:	0e 94 88 00 	call	0x110	; 0x110 <I2C_Stop>
     55c:	80 ed       	ldi	r24, 0xD0	; 208
     55e:	0e 94 8e 00 	call	0x11c	; 0x11c <I2C_Start_Wait>
     562:	8b e6       	ldi	r24, 0x6B	; 107
     564:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     56e:	0e 94 88 00 	call	0x110	; 0x110 <I2C_Stop>
     572:	80 ed       	ldi	r24, 0xD0	; 208
     574:	0e 94 8e 00 	call	0x11c	; 0x11c <I2C_Start_Wait>
     578:	8a e1       	ldi	r24, 0x1A	; 26
     57a:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     584:	0e 94 88 00 	call	0x110	; 0x110 <I2C_Stop>
     588:	80 ed       	ldi	r24, 0xD0	; 208
     58a:	0e 94 8e 00 	call	0x11c	; 0x11c <I2C_Start_Wait>
     58e:	8b e1       	ldi	r24, 0x1B	; 27
     590:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     59a:	0e 94 88 00 	call	0x110	; 0x110 <I2C_Stop>
     59e:	80 ed       	ldi	r24, 0xD0	; 208
     5a0:	0e 94 8e 00 	call	0x11c	; 0x11c <I2C_Start_Wait>
     5a4:	88 e3       	ldi	r24, 0x38	; 56
     5a6:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     5b0:	0e 94 88 00 	call	0x110	; 0x110 <I2C_Stop>
     5b4:	08 95       	ret

000005b6 <MPU_Start_Loc>:
     5b6:	80 ed       	ldi	r24, 0xD0	; 208
     5b8:	0e 94 8e 00 	call	0x11c	; 0x11c <I2C_Start_Wait>
     5bc:	8b e3       	ldi	r24, 0x3B	; 59
     5be:	0e 94 ac 00 	call	0x158	; 0x158 <I2C_Write>
     5c2:	81 ed       	ldi	r24, 0xD1	; 209
     5c4:	0e 94 6b 00 	call	0xd6	; 0xd6 <I2C_Repeated_Start>
     5c8:	08 95       	ret

000005ca <Read_RawValue>:
     5ca:	cf 93       	push	r28
     5cc:	0e 94 db 02 	call	0x5b6	; 0x5b6 <MPU_Start_Loc>
     5d0:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     5d4:	c8 2f       	mov	r28, r24
     5d6:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     5da:	6c 2f       	mov	r22, r28
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	76 2f       	mov	r23, r22
     5e0:	66 27       	eor	r22, r22
     5e2:	68 2b       	or	r22, r24
     5e4:	07 2e       	mov	r0, r23
     5e6:	00 0c       	add	r0, r0
     5e8:	88 0b       	sbc	r24, r24
     5ea:	99 0b       	sbc	r25, r25
     5ec:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     5f0:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <Acc_x>
     5f4:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <Acc_x+0x1>
     5f8:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <Acc_x+0x2>
     5fc:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <Acc_x+0x3>
     600:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     604:	c8 2f       	mov	r28, r24
     606:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     60a:	6c 2f       	mov	r22, r28
     60c:	70 e0       	ldi	r23, 0x00	; 0
     60e:	76 2f       	mov	r23, r22
     610:	66 27       	eor	r22, r22
     612:	68 2b       	or	r22, r24
     614:	07 2e       	mov	r0, r23
     616:	00 0c       	add	r0, r0
     618:	88 0b       	sbc	r24, r24
     61a:	99 0b       	sbc	r25, r25
     61c:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     620:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <Acc_y>
     624:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <Acc_y+0x1>
     628:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <Acc_y+0x2>
     62c:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <Acc_y+0x3>
     630:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     634:	c8 2f       	mov	r28, r24
     636:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     63a:	6c 2f       	mov	r22, r28
     63c:	70 e0       	ldi	r23, 0x00	; 0
     63e:	76 2f       	mov	r23, r22
     640:	66 27       	eor	r22, r22
     642:	68 2b       	or	r22, r24
     644:	07 2e       	mov	r0, r23
     646:	00 0c       	add	r0, r0
     648:	88 0b       	sbc	r24, r24
     64a:	99 0b       	sbc	r25, r25
     64c:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     650:	60 93 e0 00 	sts	0x00E0, r22	; 0x8000e0 <Acc_z>
     654:	70 93 e1 00 	sts	0x00E1, r23	; 0x8000e1 <Acc_z+0x1>
     658:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <Acc_z+0x2>
     65c:	90 93 e3 00 	sts	0x00E3, r25	; 0x8000e3 <Acc_z+0x3>
     660:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     664:	c8 2f       	mov	r28, r24
     666:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     66a:	6c 2f       	mov	r22, r28
     66c:	70 e0       	ldi	r23, 0x00	; 0
     66e:	76 2f       	mov	r23, r22
     670:	66 27       	eor	r22, r22
     672:	68 2b       	or	r22, r24
     674:	07 2e       	mov	r0, r23
     676:	00 0c       	add	r0, r0
     678:	88 0b       	sbc	r24, r24
     67a:	99 0b       	sbc	r25, r25
     67c:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     680:	60 93 fe 00 	sts	0x00FE, r22	; 0x8000fe <Temperature>
     684:	70 93 ff 00 	sts	0x00FF, r23	; 0x8000ff <Temperature+0x1>
     688:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Temperature+0x2>
     68c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Temperature+0x3>
     690:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     694:	c8 2f       	mov	r28, r24
     696:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     69a:	6c 2f       	mov	r22, r28
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	76 2f       	mov	r23, r22
     6a0:	66 27       	eor	r22, r22
     6a2:	68 2b       	or	r22, r24
     6a4:	07 2e       	mov	r0, r23
     6a6:	00 0c       	add	r0, r0
     6a8:	88 0b       	sbc	r24, r24
     6aa:	99 0b       	sbc	r25, r25
     6ac:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     6b0:	60 93 fa 00 	sts	0x00FA, r22	; 0x8000fa <Gyro_x>
     6b4:	70 93 fb 00 	sts	0x00FB, r23	; 0x8000fb <Gyro_x+0x1>
     6b8:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <Gyro_x+0x2>
     6bc:	90 93 fd 00 	sts	0x00FD, r25	; 0x8000fd <Gyro_x+0x3>
     6c0:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     6c4:	c8 2f       	mov	r28, r24
     6c6:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     6ca:	6c 2f       	mov	r22, r28
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	76 2f       	mov	r23, r22
     6d0:	66 27       	eor	r22, r22
     6d2:	68 2b       	or	r22, r24
     6d4:	07 2e       	mov	r0, r23
     6d6:	00 0c       	add	r0, r0
     6d8:	88 0b       	sbc	r24, r24
     6da:	99 0b       	sbc	r25, r25
     6dc:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     6e0:	60 93 5e 01 	sts	0x015E, r22	; 0x80015e <Gyro_y>
     6e4:	70 93 5f 01 	sts	0x015F, r23	; 0x80015f <Gyro_y+0x1>
     6e8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <Gyro_y+0x2>
     6ec:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <Gyro_y+0x3>
     6f0:	0e 94 be 00 	call	0x17c	; 0x17c <I2C_Read_Ack>
     6f4:	c8 2f       	mov	r28, r24
     6f6:	0e 94 c5 00 	call	0x18a	; 0x18a <I2C_Read_Nack>
     6fa:	6c 2f       	mov	r22, r28
     6fc:	70 e0       	ldi	r23, 0x00	; 0
     6fe:	76 2f       	mov	r23, r22
     700:	66 27       	eor	r22, r22
     702:	68 2b       	or	r22, r24
     704:	07 2e       	mov	r0, r23
     706:	00 0c       	add	r0, r0
     708:	88 0b       	sbc	r24, r24
     70a:	99 0b       	sbc	r25, r25
     70c:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     710:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <Gyro_z>
     714:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <Gyro_z+0x1>
     718:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <Gyro_z+0x2>
     71c:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <Gyro_z+0x3>
     720:	0e 94 88 00 	call	0x110	; 0x110 <I2C_Stop>
     724:	cf 91       	pop	r28
     726:	08 95       	ret

00000728 <pid_control>:



void pid_control()
{
     728:	4f 92       	push	r4
     72a:	5f 92       	push	r5
     72c:	6f 92       	push	r6
     72e:	7f 92       	push	r7
     730:	8f 92       	push	r8
     732:	9f 92       	push	r9
     734:	af 92       	push	r10
     736:	bf 92       	push	r11
     738:	cf 92       	push	r12
     73a:	df 92       	push	r13
     73c:	ef 92       	push	r14
     73e:	ff 92       	push	r15
		angle=fil_X;
     740:	c0 90 1e 01 	lds	r12, 0x011E	; 0x80011e <fil_X>
     744:	d0 90 1f 01 	lds	r13, 0x011F	; 0x80011f <fil_X+0x1>
     748:	e0 90 20 01 	lds	r14, 0x0120	; 0x800120 <fil_X+0x2>
     74c:	f0 90 21 01 	lds	r15, 0x0121	; 0x800121 <fil_X+0x3>
     750:	c0 92 c8 00 	sts	0x00C8, r12	; 0x8000c8 <angle>
     754:	d0 92 c9 00 	sts	0x00C9, r13	; 0x8000c9 <angle+0x1>
     758:	e0 92 ca 00 	sts	0x00CA, r14	; 0x8000ca <angle+0x2>
     75c:	f0 92 cb 00 	sts	0x00CB, r15	; 0x8000cb <angle+0x3>
		if(angle>=(-0.3) && angle<=0.3)
     760:	2a e9       	ldi	r18, 0x9A	; 154
     762:	39 e9       	ldi	r19, 0x99	; 153
     764:	49 e9       	ldi	r20, 0x99	; 153
     766:	5e eb       	ldi	r21, 0xBE	; 190
     768:	c7 01       	movw	r24, r14
     76a:	b6 01       	movw	r22, r12
     76c:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__gesf2>
     770:	88 23       	and	r24, r24
     772:	b4 f0       	brlt	.+44     	; 0x7a0 <pid_control+0x78>
     774:	2a e9       	ldi	r18, 0x9A	; 154
     776:	39 e9       	ldi	r19, 0x99	; 153
     778:	49 e9       	ldi	r20, 0x99	; 153
     77a:	5e e3       	ldi	r21, 0x3E	; 62
     77c:	c7 01       	movw	r24, r14
     77e:	b6 01       	movw	r22, r12
     780:	0e 94 29 08 	call	0x1052	; 0x1052 <__cmpsf2>
     784:	18 16       	cp	r1, r24
     786:	64 f0       	brlt	.+24     	; 0x7a0 <pid_control+0x78>
		{ 
			angle=0;
     788:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <angle>
     78c:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <angle+0x1>
     790:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <angle+0x2>
     794:	10 92 cb 00 	sts	0x00CB, r1	; 0x8000cb <angle+0x3>
			forward(0,0);
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	80 e0       	ldi	r24, 0x00	; 0
     79c:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <forward>
		//	_delay_ms(10);
			}


					lcd_gotoxy(1,1);
     7a0:	61 e0       	ldi	r22, 0x01	; 1
     7a2:	81 e0       	ldi	r24, 0x01	; 1
     7a4:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_gotoxy>
					lcd_string("AngX=");
     7a8:	84 eb       	ldi	r24, 0xB4	; 180
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_string>
					lcd_float(angle);
     7b0:	60 91 c8 00 	lds	r22, 0x00C8	; 0x8000c8 <angle>
     7b4:	70 91 c9 00 	lds	r23, 0x00C9	; 0x8000c9 <angle+0x1>
     7b8:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <angle+0x2>
     7bc:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <angle+0x3>
     7c0:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_float>
		angle_error=angle_setpoint-angle;
     7c4:	20 91 c8 00 	lds	r18, 0x00C8	; 0x8000c8 <angle>
     7c8:	30 91 c9 00 	lds	r19, 0x00C9	; 0x8000c9 <angle+0x1>
     7cc:	40 91 ca 00 	lds	r20, 0x00CA	; 0x8000ca <angle+0x2>
     7d0:	50 91 cb 00 	lds	r21, 0x00CB	; 0x8000cb <angle+0x3>
     7d4:	60 91 c0 00 	lds	r22, 0x00C0	; 0x8000c0 <__data_end>
     7d8:	70 91 c1 00 	lds	r23, 0x00C1	; 0x8000c1 <__data_end+0x1>
     7dc:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__data_end+0x2>
     7e0:	90 91 c3 00 	lds	r25, 0x00C3	; 0x8000c3 <__data_end+0x3>
     7e4:	0e 94 a1 07 	call	0xf42	; 0xf42 <__subsf3>
     7e8:	6b 01       	movw	r12, r22
     7ea:	7c 01       	movw	r14, r24
     7ec:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <angle_error>
     7f0:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <angle_error+0x1>
     7f4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <angle_error+0x2>
     7f8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <angle_error+0x3>
		PID_p = kp *(- angle_error);
     7fc:	90 58       	subi	r25, 0x80	; 128
     7fe:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <kp>
     802:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <kp+0x1>
     806:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <kp+0x2>
     80a:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <kp+0x3>
     80e:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     812:	4b 01       	movw	r8, r22
     814:	5c 01       	movw	r10, r24
     816:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <PID_p>
     81a:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <PID_p+0x1>
     81e:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <PID_p+0x2>
     822:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <PID_p+0x3>
		float angle_difference = angle_error - angle_previous_error;
		PID_d = kd*((angle_error - angle_previous_error)/period);
     826:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <angle_previous_error>
     82a:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <angle_previous_error+0x1>
     82e:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <angle_previous_error+0x2>
     832:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <angle_previous_error+0x3>
     836:	c7 01       	movw	r24, r14
     838:	b6 01       	movw	r22, r12
     83a:	0e 94 a1 07 	call	0xf42	; 0xf42 <__subsf3>
     83e:	2b 01       	movw	r4, r22
     840:	3c 01       	movw	r6, r24
     842:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <period>
     846:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <period+0x1>
     84a:	07 2e       	mov	r0, r23
     84c:	00 0c       	add	r0, r0
     84e:	88 0b       	sbc	r24, r24
     850:	99 0b       	sbc	r25, r25
     852:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__floatsisf>
     856:	9b 01       	movw	r18, r22
     858:	ac 01       	movw	r20, r24
     85a:	c3 01       	movw	r24, r6
     85c:	b2 01       	movw	r22, r4
     85e:	0e 94 2e 08 	call	0x105c	; 0x105c <__divsf3>
     862:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
     866:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
     86a:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__data_start+0x2>
     86e:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__data_start+0x3>
     872:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     876:	2b 01       	movw	r4, r22
     878:	3c 01       	movw	r6, r24
     87a:	60 93 46 01 	sts	0x0146, r22	; 0x800146 <PID_d>
     87e:	70 93 47 01 	sts	0x0147, r23	; 0x800147 <PID_d+0x1>
     882:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <PID_d+0x2>
     886:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <PID_d+0x3>
		
		if(-1 < angle_error && angle_error < 1)
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	40 e8       	ldi	r20, 0x80	; 128
     890:	5f eb       	ldi	r21, 0xBF	; 191
     892:	c7 01       	movw	r24, r14
     894:	b6 01       	movw	r22, r12
     896:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__gesf2>
     89a:	18 16       	cp	r1, r24
     89c:	5c f5       	brge	.+86     	; 0x8f4 <pid_control+0x1cc>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	40 e8       	ldi	r20, 0x80	; 128
     8a4:	5f e3       	ldi	r21, 0x3F	; 63
     8a6:	c7 01       	movw	r24, r14
     8a8:	b6 01       	movw	r22, r12
     8aa:	0e 94 29 08 	call	0x1052	; 0x1052 <__cmpsf2>
     8ae:	88 23       	and	r24, r24
     8b0:	0c f5       	brge	.+66     	; 0x8f4 <pid_control+0x1cc>
		PID_i = PID_i + (ki * angle_error);
     8b2:	20 91 c4 00 	lds	r18, 0x00C4	; 0x8000c4 <ki>
     8b6:	30 91 c5 00 	lds	r19, 0x00C5	; 0x8000c5 <ki+0x1>
     8ba:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <ki+0x2>
     8be:	50 91 c7 00 	lds	r21, 0x00C7	; 0x8000c7 <ki+0x3>
     8c2:	c7 01       	movw	r24, r14
     8c4:	b6 01       	movw	r22, r12
     8c6:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     8ca:	9b 01       	movw	r18, r22
     8cc:	ac 01       	movw	r20, r24
     8ce:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <PID_i>
     8d2:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <PID_i+0x1>
     8d6:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <PID_i+0x2>
     8da:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <PID_i+0x3>
     8de:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     8e2:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <PID_i>
     8e6:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <PID_i+0x1>
     8ea:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <PID_i+0x2>
     8ee:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <PID_i+0x3>
     8f2:	08 c0       	rjmp	.+16     	; 0x904 <pid_control+0x1dc>
		else
		PID_i = 0;
     8f4:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <PID_i>
     8f8:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <PID_i+0x1>
     8fc:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <PID_i+0x2>
     900:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <PID_i+0x3>
		
		
		PID_total = PID_p + PID_i + PID_d;
     904:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <PID_i>
     908:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <PID_i+0x1>
     90c:	40 91 54 01 	lds	r20, 0x0154	; 0x800154 <PID_i+0x2>
     910:	50 91 55 01 	lds	r21, 0x0155	; 0x800155 <PID_i+0x3>
     914:	c5 01       	movw	r24, r10
     916:	b4 01       	movw	r22, r8
     918:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     91c:	9b 01       	movw	r18, r22
     91e:	ac 01       	movw	r20, r24
     920:	c3 01       	movw	r24, r6
     922:	b2 01       	movw	r22, r4
     924:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>

	
}

float mapping(float var, float in_low, float in_max, float out_low,float out_max){
	return (var-in_low)*(out_max-out_low)/(in_max-in_low) + out_low;
     928:	20 e0       	ldi	r18, 0x00	; 0
     92a:	30 e4       	ldi	r19, 0x40	; 64
     92c:	4c e1       	ldi	r20, 0x1C	; 28
     92e:	56 e4       	ldi	r21, 0x46	; 70
     930:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     934:	20 e0       	ldi	r18, 0x00	; 0
     936:	30 e0       	ldi	r19, 0x00	; 0
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	53 e4       	ldi	r21, 0x43	; 67
     93c:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e4       	ldi	r19, 0x40	; 64
     944:	4c e9       	ldi	r20, 0x9C	; 156
     946:	56 e4       	ldi	r21, 0x46	; 70
     948:	0e 94 2e 08 	call	0x105c	; 0x105c <__divsf3>
     94c:	20 e0       	ldi	r18, 0x00	; 0
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	4f e7       	ldi	r20, 0x7F	; 127
     952:	53 e4       	ldi	r21, 0x43	; 67
     954:	0e 94 a1 07 	call	0xf42	; 0xf42 <__subsf3>
     958:	6b 01       	movw	r12, r22
     95a:	7c 01       	movw	r14, r24



		PID_total= mapping(PID_total,-10000,10000,-255,255);
		
		if(PID_total>0)
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	a9 01       	movw	r20, r18
     962:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__gesf2>
     966:	18 16       	cp	r1, r24
     968:	4c f0       	brlt	.+18     	; 0x97c <pid_control+0x254>
		
		PID_total = PID_p + PID_i + PID_d;



		PID_total= mapping(PID_total,-10000,10000,-255,255);
     96a:	c0 92 12 01 	sts	0x0112, r12	; 0x800112 <PID_total>
     96e:	d0 92 13 01 	sts	0x0113, r13	; 0x800113 <PID_total+0x1>
     972:	e0 92 14 01 	sts	0x0114, r14	; 0x800114 <PID_total+0x2>
     976:	f0 92 15 01 	sts	0x0115, r15	; 0x800115 <PID_total+0x3>
     97a:	9c c0       	rjmp	.+312    	; 0xab4 <pid_control+0x38c>

	
}

float mapping(float var, float in_low, float in_max, float out_low,float out_max){
	return (var-in_low)*(out_max-out_low)/(in_max-in_low) + out_low;
     97c:	20 e0       	ldi	r18, 0x00	; 0
     97e:	30 e0       	ldi	r19, 0x00	; 0
     980:	41 e6       	ldi	r20, 0x61	; 97
     982:	53 e4       	ldi	r21, 0x43	; 67
     984:	c7 01       	movw	r24, r14
     986:	b6 01       	movw	r22, r12
     988:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     98c:	20 e0       	ldi	r18, 0x00	; 0
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	4f e7       	ldi	r20, 0x7F	; 127
     992:	53 e4       	ldi	r21, 0x43	; 67
     994:	0e 94 2e 08 	call	0x105c	; 0x105c <__divsf3>
     998:	20 e0       	ldi	r18, 0x00	; 0
     99a:	30 e0       	ldi	r19, 0x00	; 0
     99c:	40 ef       	ldi	r20, 0xF0	; 240
     99e:	51 e4       	ldi	r21, 0x41	; 65
     9a0:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     9a4:	6b 01       	movw	r12, r22
     9a6:	7c 01       	movw	r14, r24
		PID_total= mapping(PID_total,-10000,10000,-255,255);
		
		if(PID_total>0)
		{
			PID_total=mapping(PID_total,0,255,30,255);
			if(PID_total>100)
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	48 ec       	ldi	r20, 0xC8	; 200
     9ae:	52 e4       	ldi	r21, 0x42	; 66
     9b0:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__gesf2>
     9b4:	18 16       	cp	r1, r24
     9b6:	4c f0       	brlt	.+18     	; 0x9ca <pid_control+0x2a2>

		PID_total= mapping(PID_total,-10000,10000,-255,255);
		
		if(PID_total>0)
		{
			PID_total=mapping(PID_total,0,255,30,255);
     9b8:	c0 92 12 01 	sts	0x0112, r12	; 0x800112 <PID_total>
     9bc:	d0 92 13 01 	sts	0x0113, r13	; 0x800113 <PID_total+0x1>
     9c0:	e0 92 14 01 	sts	0x0114, r14	; 0x800114 <PID_total+0x2>
     9c4:	f0 92 15 01 	sts	0x0115, r15	; 0x800115 <PID_total+0x3>
     9c8:	27 c0       	rjmp	.+78     	; 0xa18 <pid_control+0x2f0>
			if(PID_total>100)
			{
				PID_total+=70;
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	30 e0       	ldi	r19, 0x00	; 0
     9ce:	4c e8       	ldi	r20, 0x8C	; 140
     9d0:	52 e4       	ldi	r21, 0x42	; 66
     9d2:	c7 01       	movw	r24, r14
     9d4:	b6 01       	movw	r22, r12
     9d6:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     9da:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <PID_total>
     9de:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <PID_total+0x1>
     9e2:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <PID_total+0x2>
     9e6:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <PID_total+0x3>
				//PID_total=mapping(PID_total,0,255,200,255);
				forward(PID_total,PID_total);
     9ea:	0e 94 a7 08 	call	0x114e	; 0x114e <__fixunssfsi>
     9ee:	86 2f       	mov	r24, r22
     9f0:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <forward>
				lcd_gotoxy(2,1);
     9f4:	61 e0       	ldi	r22, 0x01	; 1
     9f6:	82 e0       	ldi	r24, 0x02	; 2
     9f8:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_gotoxy>
				lcd_string("F:");
     9fc:	8a eb       	ldi	r24, 0xBA	; 186
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_string>
				lcd_float(PID_total);
     a04:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <PID_total>
     a08:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <PID_total+0x1>
     a0c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <PID_total+0x2>
     a10:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <PID_total+0x3>
     a14:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_float>
			}
			if(PID_total>255)
     a18:	c0 90 12 01 	lds	r12, 0x0112	; 0x800112 <PID_total>
     a1c:	d0 90 13 01 	lds	r13, 0x0113	; 0x800113 <PID_total+0x1>
     a20:	e0 90 14 01 	lds	r14, 0x0114	; 0x800114 <PID_total+0x2>
     a24:	f0 90 15 01 	lds	r15, 0x0115	; 0x800115 <PID_total+0x3>
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	4f e7       	ldi	r20, 0x7F	; 127
     a2e:	53 e4       	ldi	r21, 0x43	; 67
     a30:	c7 01       	movw	r24, r14
     a32:	b6 01       	movw	r22, r12
     a34:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__gesf2>
     a38:	18 16       	cp	r1, r24
     a3a:	1c f5       	brge	.+70     	; 0xa82 <pid_control+0x35a>
			{
				PID_total=255;
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	af e7       	ldi	r26, 0x7F	; 127
     a42:	b3 e4       	ldi	r27, 0x43	; 67
     a44:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <PID_total>
     a48:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <PID_total+0x1>
     a4c:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <PID_total+0x2>
     a50:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <PID_total+0x3>
				//PID_total=mapping(PID_total,0,255,200,255);
				forward(PID_total,PID_total);
     a54:	6f ef       	ldi	r22, 0xFF	; 255
     a56:	8f ef       	ldi	r24, 0xFF	; 255
     a58:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <forward>
				lcd_gotoxy(2,1);
     a5c:	61 e0       	ldi	r22, 0x01	; 1
     a5e:	82 e0       	ldi	r24, 0x02	; 2
     a60:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_gotoxy>
				lcd_string("F:");
     a64:	8a eb       	ldi	r24, 0xBA	; 186
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_string>
				lcd_float(PID_total);
     a6c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <PID_total>
     a70:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <PID_total+0x1>
     a74:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <PID_total+0x2>
     a78:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <PID_total+0x3>
     a7c:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_float>
     a80:	19 c0       	rjmp	.+50     	; 0xab4 <pid_control+0x38c>
// 						lcd_float(PID_total);
// 						//PID_total=0;
// 						}
					
			else{
			forward(PID_total,PID_total);
     a82:	c7 01       	movw	r24, r14
     a84:	b6 01       	movw	r22, r12
     a86:	0e 94 a7 08 	call	0x114e	; 0x114e <__fixunssfsi>
     a8a:	86 2f       	mov	r24, r22
     a8c:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <forward>
			lcd_gotoxy(2,1);
     a90:	61 e0       	ldi	r22, 0x01	; 1
     a92:	82 e0       	ldi	r24, 0x02	; 2
     a94:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_gotoxy>
			lcd_string("F:");
     a98:	8a eb       	ldi	r24, 0xBA	; 186
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_string>
			lcd_float(PID_total);}
     aa0:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <PID_total>
     aa4:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <PID_total+0x1>
     aa8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <PID_total+0x2>
     aac:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <PID_total+0x3>
     ab0:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_float>
			
		}
		if(PID_total<0)
     ab4:	c0 90 12 01 	lds	r12, 0x0112	; 0x800112 <PID_total>
     ab8:	d0 90 13 01 	lds	r13, 0x0113	; 0x800113 <PID_total+0x1>
     abc:	e0 90 14 01 	lds	r14, 0x0114	; 0x800114 <PID_total+0x2>
     ac0:	f0 90 15 01 	lds	r15, 0x0115	; 0x800115 <PID_total+0x3>
     ac4:	20 e0       	ldi	r18, 0x00	; 0
     ac6:	30 e0       	ldi	r19, 0x00	; 0
     ac8:	a9 01       	movw	r20, r18
     aca:	c7 01       	movw	r24, r14
     acc:	b6 01       	movw	r22, r12
     ace:	0e 94 29 08 	call	0x1052	; 0x1052 <__cmpsf2>
     ad2:	88 23       	and	r24, r24
     ad4:	0c f0       	brlt	.+2      	; 0xad8 <pid_control+0x3b0>
     ad6:	9d c0       	rjmp	.+314    	; 0xc12 <pid_control+0x4ea>
		{
			PID_total=-PID_total;
     ad8:	c7 01       	movw	r24, r14
     ada:	b6 01       	movw	r22, r12
     adc:	90 58       	subi	r25, 0x80	; 128

	
}

float mapping(float var, float in_low, float in_max, float out_low,float out_max){
	return (var-in_low)*(out_max-out_low)/(in_max-in_low) + out_low;
     ade:	20 e0       	ldi	r18, 0x00	; 0
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	41 e6       	ldi	r20, 0x61	; 97
     ae4:	53 e4       	ldi	r21, 0x43	; 67
     ae6:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     aea:	20 e0       	ldi	r18, 0x00	; 0
     aec:	30 e0       	ldi	r19, 0x00	; 0
     aee:	4f e7       	ldi	r20, 0x7F	; 127
     af0:	53 e4       	ldi	r21, 0x43	; 67
     af2:	0e 94 2e 08 	call	0x105c	; 0x105c <__divsf3>
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 ef       	ldi	r20, 0xF0	; 240
     afc:	51 e4       	ldi	r21, 0x41	; 65
     afe:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     b02:	6b 01       	movw	r12, r22
     b04:	7c 01       	movw	r14, r24
		}
		if(PID_total<0)
		{
			PID_total=-PID_total;
			PID_total=mapping(PID_total,0,255,30,255);
			if(PID_total>100)
     b06:	20 e0       	ldi	r18, 0x00	; 0
     b08:	30 e0       	ldi	r19, 0x00	; 0
     b0a:	48 ec       	ldi	r20, 0xC8	; 200
     b0c:	52 e4       	ldi	r21, 0x42	; 66
     b0e:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__gesf2>
     b12:	18 16       	cp	r1, r24
     b14:	4c f0       	brlt	.+18     	; 0xb28 <pid_control+0x400>
			
		}
		if(PID_total<0)
		{
			PID_total=-PID_total;
			PID_total=mapping(PID_total,0,255,30,255);
     b16:	c0 92 12 01 	sts	0x0112, r12	; 0x800112 <PID_total>
     b1a:	d0 92 13 01 	sts	0x0113, r13	; 0x800113 <PID_total+0x1>
     b1e:	e0 92 14 01 	sts	0x0114, r14	; 0x800114 <PID_total+0x2>
     b22:	f0 92 15 01 	sts	0x0115, r15	; 0x800115 <PID_total+0x3>
     b26:	27 c0       	rjmp	.+78     	; 0xb76 <pid_control+0x44e>
			if(PID_total>100)
			{
				
				PID_total+=70;
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	4c e8       	ldi	r20, 0x8C	; 140
     b2e:	52 e4       	ldi	r21, 0x42	; 66
     b30:	c7 01       	movw	r24, r14
     b32:	b6 01       	movw	r22, r12
     b34:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     b38:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <PID_total>
     b3c:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <PID_total+0x1>
     b40:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <PID_total+0x2>
     b44:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <PID_total+0x3>
				//PID_total=mapping(PID_total,0,255,200,255);
				backward(PID_total,PID_total);
     b48:	0e 94 a7 08 	call	0x114e	; 0x114e <__fixunssfsi>
     b4c:	86 2f       	mov	r24, r22
     b4e:	0e 94 66 02 	call	0x4cc	; 0x4cc <backward>
				lcd_gotoxy(2,1);
     b52:	61 e0       	ldi	r22, 0x01	; 1
     b54:	82 e0       	ldi	r24, 0x02	; 2
     b56:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_gotoxy>
				lcd_string("B:");
     b5a:	8d eb       	ldi	r24, 0xBD	; 189
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_string>
				lcd_float(PID_total);
     b62:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <PID_total>
     b66:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <PID_total+0x1>
     b6a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <PID_total+0x2>
     b6e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <PID_total+0x3>
     b72:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_float>
			}
			if(PID_total>255)
     b76:	c0 90 12 01 	lds	r12, 0x0112	; 0x800112 <PID_total>
     b7a:	d0 90 13 01 	lds	r13, 0x0113	; 0x800113 <PID_total+0x1>
     b7e:	e0 90 14 01 	lds	r14, 0x0114	; 0x800114 <PID_total+0x2>
     b82:	f0 90 15 01 	lds	r15, 0x0115	; 0x800115 <PID_total+0x3>
     b86:	20 e0       	ldi	r18, 0x00	; 0
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	4f e7       	ldi	r20, 0x7F	; 127
     b8c:	53 e4       	ldi	r21, 0x43	; 67
     b8e:	c7 01       	movw	r24, r14
     b90:	b6 01       	movw	r22, r12
     b92:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__gesf2>
     b96:	18 16       	cp	r1, r24
     b98:	1c f5       	brge	.+70     	; 0xbe0 <pid_control+0x4b8>
			{
				PID_total=255;
     b9a:	80 e0       	ldi	r24, 0x00	; 0
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	af e7       	ldi	r26, 0x7F	; 127
     ba0:	b3 e4       	ldi	r27, 0x43	; 67
     ba2:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <PID_total>
     ba6:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <PID_total+0x1>
     baa:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <PID_total+0x2>
     bae:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <PID_total+0x3>
				//PID_total=mapping(PID_total,0,255,200,255);
				backward(PID_total,PID_total);
     bb2:	6f ef       	ldi	r22, 0xFF	; 255
     bb4:	8f ef       	ldi	r24, 0xFF	; 255
     bb6:	0e 94 66 02 	call	0x4cc	; 0x4cc <backward>
				lcd_gotoxy(2,1);
     bba:	61 e0       	ldi	r22, 0x01	; 1
     bbc:	82 e0       	ldi	r24, 0x02	; 2
     bbe:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_gotoxy>
				lcd_string("F:");
     bc2:	8a eb       	ldi	r24, 0xBA	; 186
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_string>
				lcd_float(PID_total);
     bca:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <PID_total>
     bce:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <PID_total+0x1>
     bd2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <PID_total+0x2>
     bd6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <PID_total+0x3>
     bda:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_float>
     bde:	19 c0       	rjmp	.+50     	; 0xc12 <pid_control+0x4ea>
// 						lcd_float(PID_total);
// 						
// 						}
					
			else{
			backward(PID_total,PID_total);
     be0:	c7 01       	movw	r24, r14
     be2:	b6 01       	movw	r22, r12
     be4:	0e 94 a7 08 	call	0x114e	; 0x114e <__fixunssfsi>
     be8:	86 2f       	mov	r24, r22
     bea:	0e 94 66 02 	call	0x4cc	; 0x4cc <backward>
			lcd_gotoxy(2,1);
     bee:	61 e0       	ldi	r22, 0x01	; 1
     bf0:	82 e0       	ldi	r24, 0x02	; 2
     bf2:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_gotoxy>
			lcd_string("B:");
     bf6:	8d eb       	ldi	r24, 0xBD	; 189
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_string>
			lcd_float(PID_total);
     bfe:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <PID_total>
     c02:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <PID_total+0x1>
     c06:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <PID_total+0x2>
     c0a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <PID_total+0x3>
     c0e:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_float>
			}
				
		}
		angle_previous_error = angle_error;
     c12:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <angle_error>
     c16:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <angle_error+0x1>
     c1a:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <angle_error+0x2>
     c1e:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <angle_error+0x3>
     c22:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <angle_previous_error>
     c26:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <angle_previous_error+0x1>
     c2a:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <angle_previous_error+0x2>
     c2e:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <angle_previous_error+0x3>
		//angle_setpoint=0;
		//_delay_ms(1000);
	}
     c32:	ff 90       	pop	r15
     c34:	ef 90       	pop	r14
     c36:	df 90       	pop	r13
     c38:	cf 90       	pop	r12
     c3a:	bf 90       	pop	r11
     c3c:	af 90       	pop	r10
     c3e:	9f 90       	pop	r9
     c40:	8f 90       	pop	r8
     c42:	7f 90       	pop	r7
     c44:	6f 90       	pop	r6
     c46:	5f 90       	pop	r5
     c48:	4f 90       	pop	r4
     c4a:	08 95       	ret

00000c4c <update_state>:



	
	void update_state(){
     c4c:	4f 92       	push	r4
     c4e:	5f 92       	push	r5
     c50:	6f 92       	push	r6
     c52:	7f 92       	push	r7
     c54:	8f 92       	push	r8
     c56:	9f 92       	push	r9
     c58:	af 92       	push	r10
     c5a:	bf 92       	push	r11
     c5c:	cf 92       	push	r12
     c5e:	df 92       	push	r13
     c60:	ef 92       	push	r14
     c62:	ff 92       	push	r15
     c64:	cf 93       	push	r28
     c66:	df 93       	push	r29
     c68:	cd b7       	in	r28, 0x3d	; 61
     c6a:	de b7       	in	r29, 0x3e	; 62
     c6c:	2c 97       	sbiw	r28, 0x0c	; 12
     c6e:	0f b6       	in	r0, 0x3f	; 63
     c70:	f8 94       	cli
     c72:	de bf       	out	0x3e, r29	; 62
     c74:	0f be       	out	0x3f, r0	; 63
     c76:	cd bf       	out	0x3d, r28	; 61
		TCNT0=0x00;
     c78:	12 be       	out	0x32, r1	; 50
		
		Read_RawValue();
     c7a:	0e 94 e5 02 	call	0x5ca	; 0x5ca <Read_RawValue>

		Xa = Acc_x/16384.0;								/* Divide raw value by sensitivity scale factor to get real values */
     c7e:	20 e0       	ldi	r18, 0x00	; 0
     c80:	30 e0       	ldi	r19, 0x00	; 0
     c82:	40 e8       	ldi	r20, 0x80	; 128
     c84:	58 e3       	ldi	r21, 0x38	; 56
     c86:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <Acc_x>
     c8a:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <Acc_x+0x1>
     c8e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <Acc_x+0x2>
     c92:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <Acc_x+0x3>
     c96:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     c9a:	4b 01       	movw	r8, r22
     c9c:	5c 01       	movw	r10, r24
     c9e:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <Xa>
     ca2:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <Xa+0x1>
     ca6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <Xa+0x2>
     caa:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <Xa+0x3>
		Ya = Acc_y/16384.0;
     cae:	20 e0       	ldi	r18, 0x00	; 0
     cb0:	30 e0       	ldi	r19, 0x00	; 0
     cb2:	40 e8       	ldi	r20, 0x80	; 128
     cb4:	58 e3       	ldi	r21, 0x38	; 56
     cb6:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <Acc_y>
     cba:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <Acc_y+0x1>
     cbe:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <Acc_y+0x2>
     cc2:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <Acc_y+0x3>
     cc6:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     cca:	6b 01       	movw	r12, r22
     ccc:	7c 01       	movw	r14, r24
     cce:	60 93 42 01 	sts	0x0142, r22	; 0x800142 <Ya>
     cd2:	70 93 43 01 	sts	0x0143, r23	; 0x800143 <Ya+0x1>
     cd6:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <Ya+0x2>
     cda:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <Ya+0x3>
		Za = Acc_z/16384.0;
     cde:	20 e0       	ldi	r18, 0x00	; 0
     ce0:	30 e0       	ldi	r19, 0x00	; 0
     ce2:	40 e8       	ldi	r20, 0x80	; 128
     ce4:	58 e3       	ldi	r21, 0x38	; 56
     ce6:	60 91 e0 00 	lds	r22, 0x00E0	; 0x8000e0 <Acc_z>
     cea:	70 91 e1 00 	lds	r23, 0x00E1	; 0x8000e1 <Acc_z+0x1>
     cee:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <Acc_z+0x2>
     cf2:	90 91 e3 00 	lds	r25, 0x00E3	; 0x8000e3 <Acc_z+0x3>
     cf6:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     cfa:	2b 01       	movw	r4, r22
     cfc:	3c 01       	movw	r6, r24
     cfe:	60 93 4e 01 	sts	0x014E, r22	; 0x80014e <Za>
     d02:	70 93 4f 01 	sts	0x014F, r23	; 0x80014f <Za+0x1>
     d06:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <Za+0x2>
     d0a:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <Za+0x3>
		
		Xg = ((Gyro_x/131)+1.8673)*time ;          // calibrated
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	43 e0       	ldi	r20, 0x03	; 3
     d14:	53 e4       	ldi	r21, 0x43	; 67
     d16:	60 91 fa 00 	lds	r22, 0x00FA	; 0x8000fa <Gyro_x>
     d1a:	70 91 fb 00 	lds	r23, 0x00FB	; 0x8000fb <Gyro_x+0x1>
     d1e:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <Gyro_x+0x2>
     d22:	90 91 fd 00 	lds	r25, 0x00FD	; 0x8000fd <Gyro_x+0x3>
     d26:	0e 94 2e 08 	call	0x105c	; 0x105c <__divsf3>
     d2a:	20 eb       	ldi	r18, 0xB0	; 176
     d2c:	33 e0       	ldi	r19, 0x03	; 3
     d2e:	4f ee       	ldi	r20, 0xEF	; 239
     d30:	5f e3       	ldi	r21, 0x3F	; 63
     d32:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     d36:	20 91 4a 01 	lds	r18, 0x014A	; 0x80014a <time>
     d3a:	30 91 4b 01 	lds	r19, 0x014B	; 0x80014b <time+0x1>
     d3e:	40 91 4c 01 	lds	r20, 0x014C	; 0x80014c <time+0x2>
     d42:	50 91 4d 01 	lds	r21, 0x014D	; 0x80014d <time+0x3>
     d46:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     d4a:	6d 83       	std	Y+5, r22	; 0x05
     d4c:	7e 83       	std	Y+6, r23	; 0x06
     d4e:	8f 83       	std	Y+7, r24	; 0x07
     d50:	98 87       	std	Y+8, r25	; 0x08
     d52:	60 93 d8 00 	sts	0x00D8, r22	; 0x8000d8 <Xg>
     d56:	70 93 d9 00 	sts	0x00D9, r23	; 0x8000d9 <Xg+0x1>
     d5a:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <Xg+0x2>
     d5e:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <Xg+0x3>
		//Xg = ((Gyro_x/131)-gyrox_cal)*time;
		Yg = Gyro_y/131;
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	43 e0       	ldi	r20, 0x03	; 3
     d68:	53 e4       	ldi	r21, 0x43	; 67
     d6a:	60 91 5e 01 	lds	r22, 0x015E	; 0x80015e <Gyro_y>
     d6e:	70 91 5f 01 	lds	r23, 0x015F	; 0x80015f <Gyro_y+0x1>
     d72:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <Gyro_y+0x2>
     d76:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <Gyro_y+0x3>
     d7a:	0e 94 2e 08 	call	0x105c	; 0x105c <__divsf3>
     d7e:	60 93 d4 00 	sts	0x00D4, r22	; 0x8000d4 <Yg>
     d82:	70 93 d5 00 	sts	0x00D5, r23	; 0x8000d5 <Yg+0x1>
     d86:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <Yg+0x2>
     d8a:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <Yg+0x3>
		Zg = Gyro_z/131;
     d8e:	20 e0       	ldi	r18, 0x00	; 0
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	43 e0       	ldi	r20, 0x03	; 3
     d94:	53 e4       	ldi	r21, 0x43	; 67
     d96:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <Gyro_z>
     d9a:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <Gyro_z+0x1>
     d9e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <Gyro_z+0x2>
     da2:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <Gyro_z+0x3>
     da6:	0e 94 2e 08 	call	0x105c	; 0x105c <__divsf3>
     daa:	60 93 d0 00 	sts	0x00D0, r22	; 0x8000d0 <Zg>
     dae:	70 93 d1 00 	sts	0x00D1, r23	; 0x8000d1 <Zg+0x1>
     db2:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <Zg+0x2>
     db6:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <Zg+0x3>
		
		
		
		angxa=asin(Ya/sqrt(Xa*Xa +Ya*Ya +Za*Za))*57.29;  //from accelerometer
     dba:	a5 01       	movw	r20, r10
     dbc:	94 01       	movw	r18, r8
     dbe:	c5 01       	movw	r24, r10
     dc0:	b4 01       	movw	r22, r8
     dc2:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     dc6:	69 83       	std	Y+1, r22	; 0x01
     dc8:	7a 83       	std	Y+2, r23	; 0x02
     dca:	8b 83       	std	Y+3, r24	; 0x03
     dcc:	9c 83       	std	Y+4, r25	; 0x04
     dce:	a7 01       	movw	r20, r14
     dd0:	96 01       	movw	r18, r12
     dd2:	c7 01       	movw	r24, r14
     dd4:	b6 01       	movw	r22, r12
     dd6:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     dda:	69 87       	std	Y+9, r22	; 0x09
     ddc:	7a 87       	std	Y+10, r23	; 0x0a
     dde:	8b 87       	std	Y+11, r24	; 0x0b
     de0:	9c 87       	std	Y+12, r25	; 0x0c
     de2:	9b 01       	movw	r18, r22
     de4:	ac 01       	movw	r20, r24
     de6:	69 81       	ldd	r22, Y+1	; 0x01
     de8:	7a 81       	ldd	r23, Y+2	; 0x02
     dea:	8b 81       	ldd	r24, Y+3	; 0x03
     dec:	9c 81       	ldd	r25, Y+4	; 0x04
     dee:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     df2:	69 83       	std	Y+1, r22	; 0x01
     df4:	7a 83       	std	Y+2, r23	; 0x02
     df6:	8b 83       	std	Y+3, r24	; 0x03
     df8:	9c 83       	std	Y+4, r25	; 0x04
     dfa:	a5 01       	movw	r20, r10
     dfc:	94 01       	movw	r18, r8
     dfe:	c5 01       	movw	r24, r10
     e00:	b4 01       	movw	r22, r8
     e02:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     e06:	4b 01       	movw	r8, r22
     e08:	5c 01       	movw	r10, r24
     e0a:	29 85       	ldd	r18, Y+9	; 0x09
     e0c:	3a 85       	ldd	r19, Y+10	; 0x0a
     e0e:	4b 85       	ldd	r20, Y+11	; 0x0b
     e10:	5c 85       	ldd	r21, Y+12	; 0x0c
     e12:	c5 01       	movw	r24, r10
     e14:	b4 01       	movw	r22, r8
     e16:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     e1a:	4b 01       	movw	r8, r22
     e1c:	5c 01       	movw	r10, r24
     e1e:	a3 01       	movw	r20, r6
     e20:	92 01       	movw	r18, r4
     e22:	c3 01       	movw	r24, r6
     e24:	b2 01       	movw	r22, r4
     e26:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     e2a:	9b 01       	movw	r18, r22
     e2c:	ac 01       	movw	r20, r24
     e2e:	c5 01       	movw	r24, r10
     e30:	b4 01       	movw	r22, r8
     e32:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     e36:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <sqrt>
     e3a:	9b 01       	movw	r18, r22
     e3c:	ac 01       	movw	r20, r24
     e3e:	c7 01       	movw	r24, r14
     e40:	b6 01       	movw	r22, r12
     e42:	0e 94 2e 08 	call	0x105c	; 0x105c <__divsf3>
     e46:	0e 94 0e 08 	call	0x101c	; 0x101c <asin>
     e4a:	26 ef       	ldi	r18, 0xF6	; 246
     e4c:	38 e2       	ldi	r19, 0x28	; 40
     e4e:	45 e6       	ldi	r20, 0x65	; 101
     e50:	52 e4       	ldi	r21, 0x42	; 66
     e52:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     e56:	6b 01       	movw	r12, r22
     e58:	7c 01       	movw	r14, r24
     e5a:	60 93 dc 00 	sts	0x00DC, r22	; 0x8000dc <angxa>
     e5e:	70 93 dd 00 	sts	0x00DD, r23	; 0x8000dd <angxa+0x1>
     e62:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <angxa+0x2>
     e66:	90 93 df 00 	sts	0x00DF, r25	; 0x8000df <angxa+0x3>
		iXg=iXg+Xg;               //from gyro
     e6a:	20 91 cc 00 	lds	r18, 0x00CC	; 0x8000cc <iXg>
     e6e:	30 91 cd 00 	lds	r19, 0x00CD	; 0x8000cd <iXg+0x1>
     e72:	40 91 ce 00 	lds	r20, 0x00CE	; 0x8000ce <iXg+0x2>
     e76:	50 91 cf 00 	lds	r21, 0x00CF	; 0x8000cf <iXg+0x3>
     e7a:	6d 81       	ldd	r22, Y+5	; 0x05
     e7c:	7e 81       	ldd	r23, Y+6	; 0x06
     e7e:	8f 81       	ldd	r24, Y+7	; 0x07
     e80:	98 85       	ldd	r25, Y+8	; 0x08
     e82:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     e86:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <iXg>
     e8a:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <iXg+0x1>
     e8e:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <iXg+0x2>
     e92:	90 93 cf 00 	sts	0x00CF, r25	; 0x8000cf <iXg+0x3>
		
		fil_X=0.988*iXg+0.012*angxa;
     e96:	21 e9       	ldi	r18, 0x91	; 145
     e98:	3d ee       	ldi	r19, 0xED	; 237
     e9a:	4c e7       	ldi	r20, 0x7C	; 124
     e9c:	5f e3       	ldi	r21, 0x3F	; 63
     e9e:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     ea2:	4b 01       	movw	r8, r22
     ea4:	5c 01       	movw	r10, r24
     ea6:	26 ea       	ldi	r18, 0xA6	; 166
     ea8:	3b e9       	ldi	r19, 0x9B	; 155
     eaa:	44 e4       	ldi	r20, 0x44	; 68
     eac:	5c e3       	ldi	r21, 0x3C	; 60
     eae:	c7 01       	movw	r24, r14
     eb0:	b6 01       	movw	r22, r12
     eb2:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     eb6:	9b 01       	movw	r18, r22
     eb8:	ac 01       	movw	r20, r24
     eba:	c5 01       	movw	r24, r10
     ebc:	b4 01       	movw	r22, r8
     ebe:	0e 94 a2 07 	call	0xf44	; 0xf44 <__addsf3>
     ec2:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <fil_X>
     ec6:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <fil_X+0x1>
     eca:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <fil_X+0x2>
     ece:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <fil_X+0x3>
		 

		
		
		
		time=(float)TCNT0;
     ed2:	62 b7       	in	r22, 0x32	; 50
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	80 e0       	ldi	r24, 0x00	; 0
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__floatunsisf>
		time=time*(1.24/8000);
     ede:	2f e7       	ldi	r18, 0x7F	; 127
     ee0:	37 e8       	ldi	r19, 0x87	; 135
     ee2:	42 e2       	ldi	r20, 0x22	; 34
     ee4:	59 e3       	ldi	r21, 0x39	; 57
     ee6:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
     eea:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <time>
     eee:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <time+0x1>
     ef2:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <time+0x2>
     ef6:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <time+0x3>
		
		
		//pid_control();
		
		
	}
     efa:	2c 96       	adiw	r28, 0x0c	; 12
     efc:	0f b6       	in	r0, 0x3f	; 63
     efe:	f8 94       	cli
     f00:	de bf       	out	0x3e, r29	; 62
     f02:	0f be       	out	0x3f, r0	; 63
     f04:	cd bf       	out	0x3d, r28	; 61
     f06:	df 91       	pop	r29
     f08:	cf 91       	pop	r28
     f0a:	ff 90       	pop	r15
     f0c:	ef 90       	pop	r14
     f0e:	df 90       	pop	r13
     f10:	cf 90       	pop	r12
     f12:	bf 90       	pop	r11
     f14:	af 90       	pop	r10
     f16:	9f 90       	pop	r9
     f18:	8f 90       	pop	r8
     f1a:	7f 90       	pop	r7
     f1c:	6f 90       	pop	r6
     f1e:	5f 90       	pop	r5
     f20:	4f 90       	pop	r4
     f22:	08 95       	ret

00000f24 <main>:

	
	
int main()
{ 
	init();
     f24:	0e 94 72 02 	call	0x4e4	; 0x4e4 <init>
	I2C_Init();	
     f28:	0e 94 67 00 	call	0xce	; 0xce <I2C_Init>
						
	MPU6050_Init();										/* Initialize MPU6050 */
     f2c:	0e 94 9a 02 	call	0x534	; 0x534 <MPU6050_Init>
								/* Initialize USART with 9600 baud rate */
	lcd_init();		
     f30:	0e 94 25 02 	call	0x44a	; 0x44a <lcd_init>
	

	
	TCCR0 = (1<<CS02) | (1<<CS00); /* Timer0, normal mode, /1024 prescalar */
     f34:	85 e0       	ldi	r24, 0x05	; 5
     f36:	83 bf       	out	0x33, r24	; 51
int count=0;
	while(1)
	
	     {   
			  update_state();
     f38:	0e 94 26 06 	call	0xc4c	; 0xc4c <update_state>
			  pid_control();
     f3c:	0e 94 94 03 	call	0x728	; 0x728 <pid_control>
// 					 angle_setpoint=0;
// 					 update_state();
// 					 pid_control();
// 				 }
				
		 }
     f40:	fb cf       	rjmp	.-10     	; 0xf38 <main+0x14>

00000f42 <__subsf3>:
     f42:	50 58       	subi	r21, 0x80	; 128

00000f44 <__addsf3>:
     f44:	bb 27       	eor	r27, r27
     f46:	aa 27       	eor	r26, r26
     f48:	0e 94 b9 07 	call	0xf72	; 0xf72 <__addsf3x>
     f4c:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__fp_round>
     f50:	0e 94 9b 09 	call	0x1336	; 0x1336 <__fp_pscA>
     f54:	38 f0       	brcs	.+14     	; 0xf64 <__addsf3+0x20>
     f56:	0e 94 a2 09 	call	0x1344	; 0x1344 <__fp_pscB>
     f5a:	20 f0       	brcs	.+8      	; 0xf64 <__addsf3+0x20>
     f5c:	39 f4       	brne	.+14     	; 0xf6c <__addsf3+0x28>
     f5e:	9f 3f       	cpi	r25, 0xFF	; 255
     f60:	19 f4       	brne	.+6      	; 0xf68 <__addsf3+0x24>
     f62:	26 f4       	brtc	.+8      	; 0xf6c <__addsf3+0x28>
     f64:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__fp_nan>
     f68:	0e f4       	brtc	.+2      	; 0xf6c <__addsf3+0x28>
     f6a:	e0 95       	com	r30
     f6c:	e7 fb       	bst	r30, 7
     f6e:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__fp_inf>

00000f72 <__addsf3x>:
     f72:	e9 2f       	mov	r30, r25
     f74:	0e 94 ba 09 	call	0x1374	; 0x1374 <__fp_split3>
     f78:	58 f3       	brcs	.-42     	; 0xf50 <__addsf3+0xc>
     f7a:	ba 17       	cp	r27, r26
     f7c:	62 07       	cpc	r22, r18
     f7e:	73 07       	cpc	r23, r19
     f80:	84 07       	cpc	r24, r20
     f82:	95 07       	cpc	r25, r21
     f84:	20 f0       	brcs	.+8      	; 0xf8e <__addsf3x+0x1c>
     f86:	79 f4       	brne	.+30     	; 0xfa6 <__addsf3x+0x34>
     f88:	a6 f5       	brtc	.+104    	; 0xff2 <__addsf3x+0x80>
     f8a:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_zero>
     f8e:	0e f4       	brtc	.+2      	; 0xf92 <__addsf3x+0x20>
     f90:	e0 95       	com	r30
     f92:	0b 2e       	mov	r0, r27
     f94:	ba 2f       	mov	r27, r26
     f96:	a0 2d       	mov	r26, r0
     f98:	0b 01       	movw	r0, r22
     f9a:	b9 01       	movw	r22, r18
     f9c:	90 01       	movw	r18, r0
     f9e:	0c 01       	movw	r0, r24
     fa0:	ca 01       	movw	r24, r20
     fa2:	a0 01       	movw	r20, r0
     fa4:	11 24       	eor	r1, r1
     fa6:	ff 27       	eor	r31, r31
     fa8:	59 1b       	sub	r21, r25
     faa:	99 f0       	breq	.+38     	; 0xfd2 <__addsf3x+0x60>
     fac:	59 3f       	cpi	r21, 0xF9	; 249
     fae:	50 f4       	brcc	.+20     	; 0xfc4 <__addsf3x+0x52>
     fb0:	50 3e       	cpi	r21, 0xE0	; 224
     fb2:	68 f1       	brcs	.+90     	; 0x100e <__addsf3x+0x9c>
     fb4:	1a 16       	cp	r1, r26
     fb6:	f0 40       	sbci	r31, 0x00	; 0
     fb8:	a2 2f       	mov	r26, r18
     fba:	23 2f       	mov	r18, r19
     fbc:	34 2f       	mov	r19, r20
     fbe:	44 27       	eor	r20, r20
     fc0:	58 5f       	subi	r21, 0xF8	; 248
     fc2:	f3 cf       	rjmp	.-26     	; 0xfaa <__addsf3x+0x38>
     fc4:	46 95       	lsr	r20
     fc6:	37 95       	ror	r19
     fc8:	27 95       	ror	r18
     fca:	a7 95       	ror	r26
     fcc:	f0 40       	sbci	r31, 0x00	; 0
     fce:	53 95       	inc	r21
     fd0:	c9 f7       	brne	.-14     	; 0xfc4 <__addsf3x+0x52>
     fd2:	7e f4       	brtc	.+30     	; 0xff2 <__addsf3x+0x80>
     fd4:	1f 16       	cp	r1, r31
     fd6:	ba 0b       	sbc	r27, r26
     fd8:	62 0b       	sbc	r22, r18
     fda:	73 0b       	sbc	r23, r19
     fdc:	84 0b       	sbc	r24, r20
     fde:	ba f0       	brmi	.+46     	; 0x100e <__addsf3x+0x9c>
     fe0:	91 50       	subi	r25, 0x01	; 1
     fe2:	a1 f0       	breq	.+40     	; 0x100c <__addsf3x+0x9a>
     fe4:	ff 0f       	add	r31, r31
     fe6:	bb 1f       	adc	r27, r27
     fe8:	66 1f       	adc	r22, r22
     fea:	77 1f       	adc	r23, r23
     fec:	88 1f       	adc	r24, r24
     fee:	c2 f7       	brpl	.-16     	; 0xfe0 <__addsf3x+0x6e>
     ff0:	0e c0       	rjmp	.+28     	; 0x100e <__addsf3x+0x9c>
     ff2:	ba 0f       	add	r27, r26
     ff4:	62 1f       	adc	r22, r18
     ff6:	73 1f       	adc	r23, r19
     ff8:	84 1f       	adc	r24, r20
     ffa:	48 f4       	brcc	.+18     	; 0x100e <__addsf3x+0x9c>
     ffc:	87 95       	ror	r24
     ffe:	77 95       	ror	r23
    1000:	67 95       	ror	r22
    1002:	b7 95       	ror	r27
    1004:	f7 95       	ror	r31
    1006:	9e 3f       	cpi	r25, 0xFE	; 254
    1008:	08 f0       	brcs	.+2      	; 0x100c <__addsf3x+0x9a>
    100a:	b0 cf       	rjmp	.-160    	; 0xf6c <__addsf3+0x28>
    100c:	93 95       	inc	r25
    100e:	88 0f       	add	r24, r24
    1010:	08 f0       	brcs	.+2      	; 0x1014 <__addsf3x+0xa2>
    1012:	99 27       	eor	r25, r25
    1014:	ee 0f       	add	r30, r30
    1016:	97 95       	ror	r25
    1018:	87 95       	ror	r24
    101a:	08 95       	ret

0000101c <asin>:
    101c:	9f 93       	push	r25
    101e:	9f 77       	andi	r25, 0x7F	; 127
    1020:	ee e3       	ldi	r30, 0x3E	; 62
    1022:	89 37       	cpi	r24, 0x79	; 121
    1024:	9e 07       	cpc	r25, r30
    1026:	28 f4       	brcc	.+10     	; 0x1032 <asin+0x16>
    1028:	e4 e5       	ldi	r30, 0x54	; 84
    102a:	f0 e0       	ldi	r31, 0x00	; 0
    102c:	0e 94 87 09 	call	0x130e	; 0x130e <__fp_powsodd>
    1030:	0c c0       	rjmp	.+24     	; 0x104a <asin+0x2e>
    1032:	0e 94 13 09 	call	0x1226	; 0x1226 <__fp_arccos>
    1036:	90 58       	subi	r25, 0x80	; 128
    1038:	a2 ea       	ldi	r26, 0xA2	; 162
    103a:	2a ed       	ldi	r18, 0xDA	; 218
    103c:	3f e0       	ldi	r19, 0x0F	; 15
    103e:	49 ec       	ldi	r20, 0xC9	; 201
    1040:	5f e3       	ldi	r21, 0x3F	; 63
    1042:	0e 94 b9 07 	call	0xf72	; 0xf72 <__addsf3x>
    1046:	0e 94 a9 09 	call	0x1352	; 0x1352 <__fp_round>
    104a:	0f 90       	pop	r0
    104c:	07 fc       	sbrc	r0, 7
    104e:	90 58       	subi	r25, 0x80	; 128
    1050:	08 95       	ret

00001052 <__cmpsf2>:
    1052:	0e 94 33 09 	call	0x1266	; 0x1266 <__fp_cmp>
    1056:	08 f4       	brcc	.+2      	; 0x105a <__cmpsf2+0x8>
    1058:	81 e0       	ldi	r24, 0x01	; 1
    105a:	08 95       	ret

0000105c <__divsf3>:
    105c:	0e 94 42 08 	call	0x1084	; 0x1084 <__divsf3x>
    1060:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__fp_round>
    1064:	0e 94 a2 09 	call	0x1344	; 0x1344 <__fp_pscB>
    1068:	58 f0       	brcs	.+22     	; 0x1080 <__divsf3+0x24>
    106a:	0e 94 9b 09 	call	0x1336	; 0x1336 <__fp_pscA>
    106e:	40 f0       	brcs	.+16     	; 0x1080 <__divsf3+0x24>
    1070:	29 f4       	brne	.+10     	; 0x107c <__divsf3+0x20>
    1072:	5f 3f       	cpi	r21, 0xFF	; 255
    1074:	29 f0       	breq	.+10     	; 0x1080 <__divsf3+0x24>
    1076:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__fp_inf>
    107a:	51 11       	cpse	r21, r1
    107c:	0c 94 dd 09 	jmp	0x13ba	; 0x13ba <__fp_szero>
    1080:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__fp_nan>

00001084 <__divsf3x>:
    1084:	0e 94 ba 09 	call	0x1374	; 0x1374 <__fp_split3>
    1088:	68 f3       	brcs	.-38     	; 0x1064 <__divsf3+0x8>

0000108a <__divsf3_pse>:
    108a:	99 23       	and	r25, r25
    108c:	b1 f3       	breq	.-20     	; 0x107a <__divsf3+0x1e>
    108e:	55 23       	and	r21, r21
    1090:	91 f3       	breq	.-28     	; 0x1076 <__divsf3+0x1a>
    1092:	95 1b       	sub	r25, r21
    1094:	55 0b       	sbc	r21, r21
    1096:	bb 27       	eor	r27, r27
    1098:	aa 27       	eor	r26, r26
    109a:	62 17       	cp	r22, r18
    109c:	73 07       	cpc	r23, r19
    109e:	84 07       	cpc	r24, r20
    10a0:	38 f0       	brcs	.+14     	; 0x10b0 <__divsf3_pse+0x26>
    10a2:	9f 5f       	subi	r25, 0xFF	; 255
    10a4:	5f 4f       	sbci	r21, 0xFF	; 255
    10a6:	22 0f       	add	r18, r18
    10a8:	33 1f       	adc	r19, r19
    10aa:	44 1f       	adc	r20, r20
    10ac:	aa 1f       	adc	r26, r26
    10ae:	a9 f3       	breq	.-22     	; 0x109a <__divsf3_pse+0x10>
    10b0:	35 d0       	rcall	.+106    	; 0x111c <__divsf3_pse+0x92>
    10b2:	0e 2e       	mov	r0, r30
    10b4:	3a f0       	brmi	.+14     	; 0x10c4 <__divsf3_pse+0x3a>
    10b6:	e0 e8       	ldi	r30, 0x80	; 128
    10b8:	32 d0       	rcall	.+100    	; 0x111e <__divsf3_pse+0x94>
    10ba:	91 50       	subi	r25, 0x01	; 1
    10bc:	50 40       	sbci	r21, 0x00	; 0
    10be:	e6 95       	lsr	r30
    10c0:	00 1c       	adc	r0, r0
    10c2:	ca f7       	brpl	.-14     	; 0x10b6 <__divsf3_pse+0x2c>
    10c4:	2b d0       	rcall	.+86     	; 0x111c <__divsf3_pse+0x92>
    10c6:	fe 2f       	mov	r31, r30
    10c8:	29 d0       	rcall	.+82     	; 0x111c <__divsf3_pse+0x92>
    10ca:	66 0f       	add	r22, r22
    10cc:	77 1f       	adc	r23, r23
    10ce:	88 1f       	adc	r24, r24
    10d0:	bb 1f       	adc	r27, r27
    10d2:	26 17       	cp	r18, r22
    10d4:	37 07       	cpc	r19, r23
    10d6:	48 07       	cpc	r20, r24
    10d8:	ab 07       	cpc	r26, r27
    10da:	b0 e8       	ldi	r27, 0x80	; 128
    10dc:	09 f0       	breq	.+2      	; 0x10e0 <__divsf3_pse+0x56>
    10de:	bb 0b       	sbc	r27, r27
    10e0:	80 2d       	mov	r24, r0
    10e2:	bf 01       	movw	r22, r30
    10e4:	ff 27       	eor	r31, r31
    10e6:	93 58       	subi	r25, 0x83	; 131
    10e8:	5f 4f       	sbci	r21, 0xFF	; 255
    10ea:	3a f0       	brmi	.+14     	; 0x10fa <__divsf3_pse+0x70>
    10ec:	9e 3f       	cpi	r25, 0xFE	; 254
    10ee:	51 05       	cpc	r21, r1
    10f0:	78 f0       	brcs	.+30     	; 0x1110 <__divsf3_pse+0x86>
    10f2:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__fp_inf>
    10f6:	0c 94 dd 09 	jmp	0x13ba	; 0x13ba <__fp_szero>
    10fa:	5f 3f       	cpi	r21, 0xFF	; 255
    10fc:	e4 f3       	brlt	.-8      	; 0x10f6 <__divsf3_pse+0x6c>
    10fe:	98 3e       	cpi	r25, 0xE8	; 232
    1100:	d4 f3       	brlt	.-12     	; 0x10f6 <__divsf3_pse+0x6c>
    1102:	86 95       	lsr	r24
    1104:	77 95       	ror	r23
    1106:	67 95       	ror	r22
    1108:	b7 95       	ror	r27
    110a:	f7 95       	ror	r31
    110c:	9f 5f       	subi	r25, 0xFF	; 255
    110e:	c9 f7       	brne	.-14     	; 0x1102 <__divsf3_pse+0x78>
    1110:	88 0f       	add	r24, r24
    1112:	91 1d       	adc	r25, r1
    1114:	96 95       	lsr	r25
    1116:	87 95       	ror	r24
    1118:	97 f9       	bld	r25, 7
    111a:	08 95       	ret
    111c:	e1 e0       	ldi	r30, 0x01	; 1
    111e:	66 0f       	add	r22, r22
    1120:	77 1f       	adc	r23, r23
    1122:	88 1f       	adc	r24, r24
    1124:	bb 1f       	adc	r27, r27
    1126:	62 17       	cp	r22, r18
    1128:	73 07       	cpc	r23, r19
    112a:	84 07       	cpc	r24, r20
    112c:	ba 07       	cpc	r27, r26
    112e:	20 f0       	brcs	.+8      	; 0x1138 <__divsf3_pse+0xae>
    1130:	62 1b       	sub	r22, r18
    1132:	73 0b       	sbc	r23, r19
    1134:	84 0b       	sbc	r24, r20
    1136:	ba 0b       	sbc	r27, r26
    1138:	ee 1f       	adc	r30, r30
    113a:	88 f7       	brcc	.-30     	; 0x111e <__divsf3_pse+0x94>
    113c:	e0 95       	com	r30
    113e:	08 95       	ret

00001140 <__fixsfsi>:
    1140:	0e 94 a7 08 	call	0x114e	; 0x114e <__fixunssfsi>
    1144:	68 94       	set
    1146:	b1 11       	cpse	r27, r1
    1148:	0c 94 dd 09 	jmp	0x13ba	; 0x13ba <__fp_szero>
    114c:	08 95       	ret

0000114e <__fixunssfsi>:
    114e:	0e 94 c2 09 	call	0x1384	; 0x1384 <__fp_splitA>
    1152:	88 f0       	brcs	.+34     	; 0x1176 <__fixunssfsi+0x28>
    1154:	9f 57       	subi	r25, 0x7F	; 127
    1156:	98 f0       	brcs	.+38     	; 0x117e <__fixunssfsi+0x30>
    1158:	b9 2f       	mov	r27, r25
    115a:	99 27       	eor	r25, r25
    115c:	b7 51       	subi	r27, 0x17	; 23
    115e:	b0 f0       	brcs	.+44     	; 0x118c <__fixunssfsi+0x3e>
    1160:	e1 f0       	breq	.+56     	; 0x119a <__fixunssfsi+0x4c>
    1162:	66 0f       	add	r22, r22
    1164:	77 1f       	adc	r23, r23
    1166:	88 1f       	adc	r24, r24
    1168:	99 1f       	adc	r25, r25
    116a:	1a f0       	brmi	.+6      	; 0x1172 <__fixunssfsi+0x24>
    116c:	ba 95       	dec	r27
    116e:	c9 f7       	brne	.-14     	; 0x1162 <__fixunssfsi+0x14>
    1170:	14 c0       	rjmp	.+40     	; 0x119a <__fixunssfsi+0x4c>
    1172:	b1 30       	cpi	r27, 0x01	; 1
    1174:	91 f0       	breq	.+36     	; 0x119a <__fixunssfsi+0x4c>
    1176:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <__fp_zero>
    117a:	b1 e0       	ldi	r27, 0x01	; 1
    117c:	08 95       	ret
    117e:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_zero>
    1182:	67 2f       	mov	r22, r23
    1184:	78 2f       	mov	r23, r24
    1186:	88 27       	eor	r24, r24
    1188:	b8 5f       	subi	r27, 0xF8	; 248
    118a:	39 f0       	breq	.+14     	; 0x119a <__fixunssfsi+0x4c>
    118c:	b9 3f       	cpi	r27, 0xF9	; 249
    118e:	cc f3       	brlt	.-14     	; 0x1182 <__fixunssfsi+0x34>
    1190:	86 95       	lsr	r24
    1192:	77 95       	ror	r23
    1194:	67 95       	ror	r22
    1196:	b3 95       	inc	r27
    1198:	d9 f7       	brne	.-10     	; 0x1190 <__fixunssfsi+0x42>
    119a:	3e f4       	brtc	.+14     	; 0x11aa <__fixunssfsi+0x5c>
    119c:	90 95       	com	r25
    119e:	80 95       	com	r24
    11a0:	70 95       	com	r23
    11a2:	61 95       	neg	r22
    11a4:	7f 4f       	sbci	r23, 0xFF	; 255
    11a6:	8f 4f       	sbci	r24, 0xFF	; 255
    11a8:	9f 4f       	sbci	r25, 0xFF	; 255
    11aa:	08 95       	ret

000011ac <__floatunsisf>:
    11ac:	e8 94       	clt
    11ae:	09 c0       	rjmp	.+18     	; 0x11c2 <__floatsisf+0x12>

000011b0 <__floatsisf>:
    11b0:	97 fb       	bst	r25, 7
    11b2:	3e f4       	brtc	.+14     	; 0x11c2 <__floatsisf+0x12>
    11b4:	90 95       	com	r25
    11b6:	80 95       	com	r24
    11b8:	70 95       	com	r23
    11ba:	61 95       	neg	r22
    11bc:	7f 4f       	sbci	r23, 0xFF	; 255
    11be:	8f 4f       	sbci	r24, 0xFF	; 255
    11c0:	9f 4f       	sbci	r25, 0xFF	; 255
    11c2:	99 23       	and	r25, r25
    11c4:	a9 f0       	breq	.+42     	; 0x11f0 <__floatsisf+0x40>
    11c6:	f9 2f       	mov	r31, r25
    11c8:	96 e9       	ldi	r25, 0x96	; 150
    11ca:	bb 27       	eor	r27, r27
    11cc:	93 95       	inc	r25
    11ce:	f6 95       	lsr	r31
    11d0:	87 95       	ror	r24
    11d2:	77 95       	ror	r23
    11d4:	67 95       	ror	r22
    11d6:	b7 95       	ror	r27
    11d8:	f1 11       	cpse	r31, r1
    11da:	f8 cf       	rjmp	.-16     	; 0x11cc <__floatsisf+0x1c>
    11dc:	fa f4       	brpl	.+62     	; 0x121c <__floatsisf+0x6c>
    11de:	bb 0f       	add	r27, r27
    11e0:	11 f4       	brne	.+4      	; 0x11e6 <__floatsisf+0x36>
    11e2:	60 ff       	sbrs	r22, 0
    11e4:	1b c0       	rjmp	.+54     	; 0x121c <__floatsisf+0x6c>
    11e6:	6f 5f       	subi	r22, 0xFF	; 255
    11e8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ea:	8f 4f       	sbci	r24, 0xFF	; 255
    11ec:	9f 4f       	sbci	r25, 0xFF	; 255
    11ee:	16 c0       	rjmp	.+44     	; 0x121c <__floatsisf+0x6c>
    11f0:	88 23       	and	r24, r24
    11f2:	11 f0       	breq	.+4      	; 0x11f8 <__floatsisf+0x48>
    11f4:	96 e9       	ldi	r25, 0x96	; 150
    11f6:	11 c0       	rjmp	.+34     	; 0x121a <__floatsisf+0x6a>
    11f8:	77 23       	and	r23, r23
    11fa:	21 f0       	breq	.+8      	; 0x1204 <__floatsisf+0x54>
    11fc:	9e e8       	ldi	r25, 0x8E	; 142
    11fe:	87 2f       	mov	r24, r23
    1200:	76 2f       	mov	r23, r22
    1202:	05 c0       	rjmp	.+10     	; 0x120e <__floatsisf+0x5e>
    1204:	66 23       	and	r22, r22
    1206:	71 f0       	breq	.+28     	; 0x1224 <__floatsisf+0x74>
    1208:	96 e8       	ldi	r25, 0x86	; 134
    120a:	86 2f       	mov	r24, r22
    120c:	70 e0       	ldi	r23, 0x00	; 0
    120e:	60 e0       	ldi	r22, 0x00	; 0
    1210:	2a f0       	brmi	.+10     	; 0x121c <__floatsisf+0x6c>
    1212:	9a 95       	dec	r25
    1214:	66 0f       	add	r22, r22
    1216:	77 1f       	adc	r23, r23
    1218:	88 1f       	adc	r24, r24
    121a:	da f7       	brpl	.-10     	; 0x1212 <__floatsisf+0x62>
    121c:	88 0f       	add	r24, r24
    121e:	96 95       	lsr	r25
    1220:	87 95       	ror	r24
    1222:	97 f9       	bld	r25, 7
    1224:	08 95       	ret

00001226 <__fp_arccos>:
    1226:	df 93       	push	r29
    1228:	cf 93       	push	r28
    122a:	1f 93       	push	r17
    122c:	0f 93       	push	r16
    122e:	8b 01       	movw	r16, r22
    1230:	ec 01       	movw	r28, r24
    1232:	e8 e6       	ldi	r30, 0x68	; 104
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__fp_powser>
    123a:	0e 94 a9 09 	call	0x1352	; 0x1352 <__fp_round>
    123e:	98 01       	movw	r18, r16
    1240:	ae 01       	movw	r20, r28
    1242:	8b 01       	movw	r16, r22
    1244:	ec 01       	movw	r28, r24
    1246:	60 e0       	ldi	r22, 0x00	; 0
    1248:	70 e0       	ldi	r23, 0x00	; 0
    124a:	80 e8       	ldi	r24, 0x80	; 128
    124c:	9f e3       	ldi	r25, 0x3F	; 63
    124e:	0e 94 a1 07 	call	0xf42	; 0xf42 <__subsf3>
    1252:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <sqrt>
    1256:	98 01       	movw	r18, r16
    1258:	ae 01       	movw	r20, r28
    125a:	0f 91       	pop	r16
    125c:	1f 91       	pop	r17
    125e:	cf 91       	pop	r28
    1260:	df 91       	pop	r29
    1262:	0c 94 fb 09 	jmp	0x13f6	; 0x13f6 <__mulsf3x>

00001266 <__fp_cmp>:
    1266:	99 0f       	add	r25, r25
    1268:	00 08       	sbc	r0, r0
    126a:	55 0f       	add	r21, r21
    126c:	aa 0b       	sbc	r26, r26
    126e:	e0 e8       	ldi	r30, 0x80	; 128
    1270:	fe ef       	ldi	r31, 0xFE	; 254
    1272:	16 16       	cp	r1, r22
    1274:	17 06       	cpc	r1, r23
    1276:	e8 07       	cpc	r30, r24
    1278:	f9 07       	cpc	r31, r25
    127a:	c0 f0       	brcs	.+48     	; 0x12ac <__fp_cmp+0x46>
    127c:	12 16       	cp	r1, r18
    127e:	13 06       	cpc	r1, r19
    1280:	e4 07       	cpc	r30, r20
    1282:	f5 07       	cpc	r31, r21
    1284:	98 f0       	brcs	.+38     	; 0x12ac <__fp_cmp+0x46>
    1286:	62 1b       	sub	r22, r18
    1288:	73 0b       	sbc	r23, r19
    128a:	84 0b       	sbc	r24, r20
    128c:	95 0b       	sbc	r25, r21
    128e:	39 f4       	brne	.+14     	; 0x129e <__fp_cmp+0x38>
    1290:	0a 26       	eor	r0, r26
    1292:	61 f0       	breq	.+24     	; 0x12ac <__fp_cmp+0x46>
    1294:	23 2b       	or	r18, r19
    1296:	24 2b       	or	r18, r20
    1298:	25 2b       	or	r18, r21
    129a:	21 f4       	brne	.+8      	; 0x12a4 <__fp_cmp+0x3e>
    129c:	08 95       	ret
    129e:	0a 26       	eor	r0, r26
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <__fp_cmp+0x3e>
    12a2:	a1 40       	sbci	r26, 0x01	; 1
    12a4:	a6 95       	lsr	r26
    12a6:	8f ef       	ldi	r24, 0xFF	; 255
    12a8:	81 1d       	adc	r24, r1
    12aa:	81 1d       	adc	r24, r1
    12ac:	08 95       	ret

000012ae <__fp_inf>:
    12ae:	97 f9       	bld	r25, 7
    12b0:	9f 67       	ori	r25, 0x7F	; 127
    12b2:	80 e8       	ldi	r24, 0x80	; 128
    12b4:	70 e0       	ldi	r23, 0x00	; 0
    12b6:	60 e0       	ldi	r22, 0x00	; 0
    12b8:	08 95       	ret

000012ba <__fp_nan>:
    12ba:	9f ef       	ldi	r25, 0xFF	; 255
    12bc:	80 ec       	ldi	r24, 0xC0	; 192
    12be:	08 95       	ret

000012c0 <__fp_powser>:
    12c0:	df 93       	push	r29
    12c2:	cf 93       	push	r28
    12c4:	1f 93       	push	r17
    12c6:	0f 93       	push	r16
    12c8:	ff 92       	push	r15
    12ca:	ef 92       	push	r14
    12cc:	df 92       	push	r13
    12ce:	7b 01       	movw	r14, r22
    12d0:	8c 01       	movw	r16, r24
    12d2:	68 94       	set
    12d4:	06 c0       	rjmp	.+12     	; 0x12e2 <__fp_powser+0x22>
    12d6:	da 2e       	mov	r13, r26
    12d8:	ef 01       	movw	r28, r30
    12da:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <__mulsf3x>
    12de:	fe 01       	movw	r30, r28
    12e0:	e8 94       	clt
    12e2:	a5 91       	lpm	r26, Z+
    12e4:	25 91       	lpm	r18, Z+
    12e6:	35 91       	lpm	r19, Z+
    12e8:	45 91       	lpm	r20, Z+
    12ea:	55 91       	lpm	r21, Z+
    12ec:	a6 f3       	brts	.-24     	; 0x12d6 <__fp_powser+0x16>
    12ee:	ef 01       	movw	r28, r30
    12f0:	0e 94 b9 07 	call	0xf72	; 0xf72 <__addsf3x>
    12f4:	fe 01       	movw	r30, r28
    12f6:	97 01       	movw	r18, r14
    12f8:	a8 01       	movw	r20, r16
    12fa:	da 94       	dec	r13
    12fc:	69 f7       	brne	.-38     	; 0x12d8 <__fp_powser+0x18>
    12fe:	df 90       	pop	r13
    1300:	ef 90       	pop	r14
    1302:	ff 90       	pop	r15
    1304:	0f 91       	pop	r16
    1306:	1f 91       	pop	r17
    1308:	cf 91       	pop	r28
    130a:	df 91       	pop	r29
    130c:	08 95       	ret

0000130e <__fp_powsodd>:
    130e:	9f 93       	push	r25
    1310:	8f 93       	push	r24
    1312:	7f 93       	push	r23
    1314:	6f 93       	push	r22
    1316:	ff 93       	push	r31
    1318:	ef 93       	push	r30
    131a:	9b 01       	movw	r18, r22
    131c:	ac 01       	movw	r20, r24
    131e:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3>
    1322:	ef 91       	pop	r30
    1324:	ff 91       	pop	r31
    1326:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__fp_powser>
    132a:	2f 91       	pop	r18
    132c:	3f 91       	pop	r19
    132e:	4f 91       	pop	r20
    1330:	5f 91       	pop	r21
    1332:	0c 94 e8 09 	jmp	0x13d0	; 0x13d0 <__mulsf3>

00001336 <__fp_pscA>:
    1336:	00 24       	eor	r0, r0
    1338:	0a 94       	dec	r0
    133a:	16 16       	cp	r1, r22
    133c:	17 06       	cpc	r1, r23
    133e:	18 06       	cpc	r1, r24
    1340:	09 06       	cpc	r0, r25
    1342:	08 95       	ret

00001344 <__fp_pscB>:
    1344:	00 24       	eor	r0, r0
    1346:	0a 94       	dec	r0
    1348:	12 16       	cp	r1, r18
    134a:	13 06       	cpc	r1, r19
    134c:	14 06       	cpc	r1, r20
    134e:	05 06       	cpc	r0, r21
    1350:	08 95       	ret

00001352 <__fp_round>:
    1352:	09 2e       	mov	r0, r25
    1354:	03 94       	inc	r0
    1356:	00 0c       	add	r0, r0
    1358:	11 f4       	brne	.+4      	; 0x135e <__fp_round+0xc>
    135a:	88 23       	and	r24, r24
    135c:	52 f0       	brmi	.+20     	; 0x1372 <__fp_round+0x20>
    135e:	bb 0f       	add	r27, r27
    1360:	40 f4       	brcc	.+16     	; 0x1372 <__fp_round+0x20>
    1362:	bf 2b       	or	r27, r31
    1364:	11 f4       	brne	.+4      	; 0x136a <__fp_round+0x18>
    1366:	60 ff       	sbrs	r22, 0
    1368:	04 c0       	rjmp	.+8      	; 0x1372 <__fp_round+0x20>
    136a:	6f 5f       	subi	r22, 0xFF	; 255
    136c:	7f 4f       	sbci	r23, 0xFF	; 255
    136e:	8f 4f       	sbci	r24, 0xFF	; 255
    1370:	9f 4f       	sbci	r25, 0xFF	; 255
    1372:	08 95       	ret

00001374 <__fp_split3>:
    1374:	57 fd       	sbrc	r21, 7
    1376:	90 58       	subi	r25, 0x80	; 128
    1378:	44 0f       	add	r20, r20
    137a:	55 1f       	adc	r21, r21
    137c:	59 f0       	breq	.+22     	; 0x1394 <__fp_splitA+0x10>
    137e:	5f 3f       	cpi	r21, 0xFF	; 255
    1380:	71 f0       	breq	.+28     	; 0x139e <__fp_splitA+0x1a>
    1382:	47 95       	ror	r20

00001384 <__fp_splitA>:
    1384:	88 0f       	add	r24, r24
    1386:	97 fb       	bst	r25, 7
    1388:	99 1f       	adc	r25, r25
    138a:	61 f0       	breq	.+24     	; 0x13a4 <__fp_splitA+0x20>
    138c:	9f 3f       	cpi	r25, 0xFF	; 255
    138e:	79 f0       	breq	.+30     	; 0x13ae <__fp_splitA+0x2a>
    1390:	87 95       	ror	r24
    1392:	08 95       	ret
    1394:	12 16       	cp	r1, r18
    1396:	13 06       	cpc	r1, r19
    1398:	14 06       	cpc	r1, r20
    139a:	55 1f       	adc	r21, r21
    139c:	f2 cf       	rjmp	.-28     	; 0x1382 <__fp_split3+0xe>
    139e:	46 95       	lsr	r20
    13a0:	f1 df       	rcall	.-30     	; 0x1384 <__fp_splitA>
    13a2:	08 c0       	rjmp	.+16     	; 0x13b4 <__fp_splitA+0x30>
    13a4:	16 16       	cp	r1, r22
    13a6:	17 06       	cpc	r1, r23
    13a8:	18 06       	cpc	r1, r24
    13aa:	99 1f       	adc	r25, r25
    13ac:	f1 cf       	rjmp	.-30     	; 0x1390 <__fp_splitA+0xc>
    13ae:	86 95       	lsr	r24
    13b0:	71 05       	cpc	r23, r1
    13b2:	61 05       	cpc	r22, r1
    13b4:	08 94       	sec
    13b6:	08 95       	ret

000013b8 <__fp_zero>:
    13b8:	e8 94       	clt

000013ba <__fp_szero>:
    13ba:	bb 27       	eor	r27, r27
    13bc:	66 27       	eor	r22, r22
    13be:	77 27       	eor	r23, r23
    13c0:	cb 01       	movw	r24, r22
    13c2:	97 f9       	bld	r25, 7
    13c4:	08 95       	ret

000013c6 <__gesf2>:
    13c6:	0e 94 33 09 	call	0x1266	; 0x1266 <__fp_cmp>
    13ca:	08 f4       	brcc	.+2      	; 0x13ce <__gesf2+0x8>
    13cc:	8f ef       	ldi	r24, 0xFF	; 255
    13ce:	08 95       	ret

000013d0 <__mulsf3>:
    13d0:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <__mulsf3x>
    13d4:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__fp_round>
    13d8:	0e 94 9b 09 	call	0x1336	; 0x1336 <__fp_pscA>
    13dc:	38 f0       	brcs	.+14     	; 0x13ec <__mulsf3+0x1c>
    13de:	0e 94 a2 09 	call	0x1344	; 0x1344 <__fp_pscB>
    13e2:	20 f0       	brcs	.+8      	; 0x13ec <__mulsf3+0x1c>
    13e4:	95 23       	and	r25, r21
    13e6:	11 f0       	breq	.+4      	; 0x13ec <__mulsf3+0x1c>
    13e8:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__fp_inf>
    13ec:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__fp_nan>
    13f0:	11 24       	eor	r1, r1
    13f2:	0c 94 dd 09 	jmp	0x13ba	; 0x13ba <__fp_szero>

000013f6 <__mulsf3x>:
    13f6:	0e 94 ba 09 	call	0x1374	; 0x1374 <__fp_split3>
    13fa:	70 f3       	brcs	.-36     	; 0x13d8 <__mulsf3+0x8>

000013fc <__mulsf3_pse>:
    13fc:	95 9f       	mul	r25, r21
    13fe:	c1 f3       	breq	.-16     	; 0x13f0 <__mulsf3+0x20>
    1400:	95 0f       	add	r25, r21
    1402:	50 e0       	ldi	r21, 0x00	; 0
    1404:	55 1f       	adc	r21, r21
    1406:	62 9f       	mul	r22, r18
    1408:	f0 01       	movw	r30, r0
    140a:	72 9f       	mul	r23, r18
    140c:	bb 27       	eor	r27, r27
    140e:	f0 0d       	add	r31, r0
    1410:	b1 1d       	adc	r27, r1
    1412:	63 9f       	mul	r22, r19
    1414:	aa 27       	eor	r26, r26
    1416:	f0 0d       	add	r31, r0
    1418:	b1 1d       	adc	r27, r1
    141a:	aa 1f       	adc	r26, r26
    141c:	64 9f       	mul	r22, r20
    141e:	66 27       	eor	r22, r22
    1420:	b0 0d       	add	r27, r0
    1422:	a1 1d       	adc	r26, r1
    1424:	66 1f       	adc	r22, r22
    1426:	82 9f       	mul	r24, r18
    1428:	22 27       	eor	r18, r18
    142a:	b0 0d       	add	r27, r0
    142c:	a1 1d       	adc	r26, r1
    142e:	62 1f       	adc	r22, r18
    1430:	73 9f       	mul	r23, r19
    1432:	b0 0d       	add	r27, r0
    1434:	a1 1d       	adc	r26, r1
    1436:	62 1f       	adc	r22, r18
    1438:	83 9f       	mul	r24, r19
    143a:	a0 0d       	add	r26, r0
    143c:	61 1d       	adc	r22, r1
    143e:	22 1f       	adc	r18, r18
    1440:	74 9f       	mul	r23, r20
    1442:	33 27       	eor	r19, r19
    1444:	a0 0d       	add	r26, r0
    1446:	61 1d       	adc	r22, r1
    1448:	23 1f       	adc	r18, r19
    144a:	84 9f       	mul	r24, r20
    144c:	60 0d       	add	r22, r0
    144e:	21 1d       	adc	r18, r1
    1450:	82 2f       	mov	r24, r18
    1452:	76 2f       	mov	r23, r22
    1454:	6a 2f       	mov	r22, r26
    1456:	11 24       	eor	r1, r1
    1458:	9f 57       	subi	r25, 0x7F	; 127
    145a:	50 40       	sbci	r21, 0x00	; 0
    145c:	9a f0       	brmi	.+38     	; 0x1484 <__mulsf3_pse+0x88>
    145e:	f1 f0       	breq	.+60     	; 0x149c <__mulsf3_pse+0xa0>
    1460:	88 23       	and	r24, r24
    1462:	4a f0       	brmi	.+18     	; 0x1476 <__mulsf3_pse+0x7a>
    1464:	ee 0f       	add	r30, r30
    1466:	ff 1f       	adc	r31, r31
    1468:	bb 1f       	adc	r27, r27
    146a:	66 1f       	adc	r22, r22
    146c:	77 1f       	adc	r23, r23
    146e:	88 1f       	adc	r24, r24
    1470:	91 50       	subi	r25, 0x01	; 1
    1472:	50 40       	sbci	r21, 0x00	; 0
    1474:	a9 f7       	brne	.-22     	; 0x1460 <__mulsf3_pse+0x64>
    1476:	9e 3f       	cpi	r25, 0xFE	; 254
    1478:	51 05       	cpc	r21, r1
    147a:	80 f0       	brcs	.+32     	; 0x149c <__mulsf3_pse+0xa0>
    147c:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__fp_inf>
    1480:	0c 94 dd 09 	jmp	0x13ba	; 0x13ba <__fp_szero>
    1484:	5f 3f       	cpi	r21, 0xFF	; 255
    1486:	e4 f3       	brlt	.-8      	; 0x1480 <__mulsf3_pse+0x84>
    1488:	98 3e       	cpi	r25, 0xE8	; 232
    148a:	d4 f3       	brlt	.-12     	; 0x1480 <__mulsf3_pse+0x84>
    148c:	86 95       	lsr	r24
    148e:	77 95       	ror	r23
    1490:	67 95       	ror	r22
    1492:	b7 95       	ror	r27
    1494:	f7 95       	ror	r31
    1496:	e7 95       	ror	r30
    1498:	9f 5f       	subi	r25, 0xFF	; 255
    149a:	c1 f7       	brne	.-16     	; 0x148c <__mulsf3_pse+0x90>
    149c:	fe 2b       	or	r31, r30
    149e:	88 0f       	add	r24, r24
    14a0:	91 1d       	adc	r25, r1
    14a2:	96 95       	lsr	r25
    14a4:	87 95       	ror	r24
    14a6:	97 f9       	bld	r25, 7
    14a8:	08 95       	ret
    14aa:	19 f4       	brne	.+6      	; 0x14b2 <__mulsf3_pse+0xb6>
    14ac:	16 f4       	brtc	.+4      	; 0x14b2 <__mulsf3_pse+0xb6>
    14ae:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__fp_nan>
    14b2:	0c 94 9b 0a 	jmp	0x1536	; 0x1536 <__fp_mpack>

000014b6 <sqrt>:
    14b6:	0e 94 c2 09 	call	0x1384	; 0x1384 <__fp_splitA>
    14ba:	b8 f3       	brcs	.-18     	; 0x14aa <__mulsf3_pse+0xae>
    14bc:	99 23       	and	r25, r25
    14be:	c9 f3       	breq	.-14     	; 0x14b2 <__mulsf3_pse+0xb6>
    14c0:	b6 f3       	brts	.-20     	; 0x14ae <__mulsf3_pse+0xb2>
    14c2:	9f 57       	subi	r25, 0x7F	; 127
    14c4:	55 0b       	sbc	r21, r21
    14c6:	87 ff       	sbrs	r24, 7
    14c8:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__fp_norm2>
    14cc:	00 24       	eor	r0, r0
    14ce:	a0 e6       	ldi	r26, 0x60	; 96
    14d0:	40 ea       	ldi	r20, 0xA0	; 160
    14d2:	90 01       	movw	r18, r0
    14d4:	80 58       	subi	r24, 0x80	; 128
    14d6:	56 95       	lsr	r21
    14d8:	97 95       	ror	r25
    14da:	28 f4       	brcc	.+10     	; 0x14e6 <sqrt+0x30>
    14dc:	80 5c       	subi	r24, 0xC0	; 192
    14de:	66 0f       	add	r22, r22
    14e0:	77 1f       	adc	r23, r23
    14e2:	88 1f       	adc	r24, r24
    14e4:	20 f0       	brcs	.+8      	; 0x14ee <sqrt+0x38>
    14e6:	26 17       	cp	r18, r22
    14e8:	37 07       	cpc	r19, r23
    14ea:	48 07       	cpc	r20, r24
    14ec:	30 f4       	brcc	.+12     	; 0x14fa <sqrt+0x44>
    14ee:	62 1b       	sub	r22, r18
    14f0:	73 0b       	sbc	r23, r19
    14f2:	84 0b       	sbc	r24, r20
    14f4:	20 29       	or	r18, r0
    14f6:	31 29       	or	r19, r1
    14f8:	4a 2b       	or	r20, r26
    14fa:	a6 95       	lsr	r26
    14fc:	17 94       	ror	r1
    14fe:	07 94       	ror	r0
    1500:	20 25       	eor	r18, r0
    1502:	31 25       	eor	r19, r1
    1504:	4a 27       	eor	r20, r26
    1506:	58 f7       	brcc	.-42     	; 0x14de <sqrt+0x28>
    1508:	66 0f       	add	r22, r22
    150a:	77 1f       	adc	r23, r23
    150c:	88 1f       	adc	r24, r24
    150e:	20 f0       	brcs	.+8      	; 0x1518 <sqrt+0x62>
    1510:	26 17       	cp	r18, r22
    1512:	37 07       	cpc	r19, r23
    1514:	48 07       	cpc	r20, r24
    1516:	30 f4       	brcc	.+12     	; 0x1524 <sqrt+0x6e>
    1518:	62 0b       	sbc	r22, r18
    151a:	73 0b       	sbc	r23, r19
    151c:	84 0b       	sbc	r24, r20
    151e:	20 0d       	add	r18, r0
    1520:	31 1d       	adc	r19, r1
    1522:	41 1d       	adc	r20, r1
    1524:	a0 95       	com	r26
    1526:	81 f7       	brne	.-32     	; 0x1508 <sqrt+0x52>
    1528:	b9 01       	movw	r22, r18
    152a:	84 2f       	mov	r24, r20
    152c:	91 58       	subi	r25, 0x81	; 129
    152e:	88 0f       	add	r24, r24
    1530:	96 95       	lsr	r25
    1532:	87 95       	ror	r24
    1534:	08 95       	ret

00001536 <__fp_mpack>:
    1536:	9f 3f       	cpi	r25, 0xFF	; 255
    1538:	31 f0       	breq	.+12     	; 0x1546 <__fp_mpack_finite+0xc>

0000153a <__fp_mpack_finite>:
    153a:	91 50       	subi	r25, 0x01	; 1
    153c:	20 f4       	brcc	.+8      	; 0x1546 <__fp_mpack_finite+0xc>
    153e:	87 95       	ror	r24
    1540:	77 95       	ror	r23
    1542:	67 95       	ror	r22
    1544:	b7 95       	ror	r27
    1546:	88 0f       	add	r24, r24
    1548:	91 1d       	adc	r25, r1
    154a:	96 95       	lsr	r25
    154c:	87 95       	ror	r24
    154e:	97 f9       	bld	r25, 7
    1550:	08 95       	ret

00001552 <__fp_norm2>:
    1552:	91 50       	subi	r25, 0x01	; 1
    1554:	50 40       	sbci	r21, 0x00	; 0
    1556:	66 0f       	add	r22, r22
    1558:	77 1f       	adc	r23, r23
    155a:	88 1f       	adc	r24, r24
    155c:	d2 f7       	brpl	.-12     	; 0x1552 <__fp_norm2>
    155e:	08 95       	ret

00001560 <sprintf>:
    1560:	ae e0       	ldi	r26, 0x0E	; 14
    1562:	b0 e0       	ldi	r27, 0x00	; 0
    1564:	e6 eb       	ldi	r30, 0xB6	; 182
    1566:	fa e0       	ldi	r31, 0x0A	; 10
    1568:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__prologue_saves__+0x1c>
    156c:	0d 89       	ldd	r16, Y+21	; 0x15
    156e:	1e 89       	ldd	r17, Y+22	; 0x16
    1570:	86 e0       	ldi	r24, 0x06	; 6
    1572:	8c 83       	std	Y+4, r24	; 0x04
    1574:	1a 83       	std	Y+2, r17	; 0x02
    1576:	09 83       	std	Y+1, r16	; 0x01
    1578:	8f ef       	ldi	r24, 0xFF	; 255
    157a:	9f e7       	ldi	r25, 0x7F	; 127
    157c:	9e 83       	std	Y+6, r25	; 0x06
    157e:	8d 83       	std	Y+5, r24	; 0x05
    1580:	ae 01       	movw	r20, r28
    1582:	47 5e       	subi	r20, 0xE7	; 231
    1584:	5f 4f       	sbci	r21, 0xFF	; 255
    1586:	6f 89       	ldd	r22, Y+23	; 0x17
    1588:	78 8d       	ldd	r23, Y+24	; 0x18
    158a:	ce 01       	movw	r24, r28
    158c:	01 96       	adiw	r24, 0x01	; 1
    158e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <vfprintf>
    1592:	2f 81       	ldd	r18, Y+7	; 0x07
    1594:	38 85       	ldd	r19, Y+8	; 0x08
    1596:	f8 01       	movw	r30, r16
    1598:	e2 0f       	add	r30, r18
    159a:	f3 1f       	adc	r31, r19
    159c:	10 82       	st	Z, r1
    159e:	2e 96       	adiw	r28, 0x0e	; 14
    15a0:	e4 e0       	ldi	r30, 0x04	; 4
    15a2:	0c 94 7b 0d 	jmp	0x1af6	; 0x1af6 <__epilogue_restores__+0x1c>

000015a6 <vfprintf>:
    15a6:	ac e0       	ldi	r26, 0x0C	; 12
    15a8:	b0 e0       	ldi	r27, 0x00	; 0
    15aa:	e9 ed       	ldi	r30, 0xD9	; 217
    15ac:	fa e0       	ldi	r31, 0x0A	; 10
    15ae:	0c 94 51 0d 	jmp	0x1aa2	; 0x1aa2 <__prologue_saves__>
    15b2:	7c 01       	movw	r14, r24
    15b4:	6b 01       	movw	r12, r22
    15b6:	8a 01       	movw	r16, r20
    15b8:	fc 01       	movw	r30, r24
    15ba:	17 82       	std	Z+7, r1	; 0x07
    15bc:	16 82       	std	Z+6, r1	; 0x06
    15be:	83 81       	ldd	r24, Z+3	; 0x03
    15c0:	81 ff       	sbrs	r24, 1
    15c2:	bd c1       	rjmp	.+890    	; 0x193e <vfprintf+0x398>
    15c4:	ce 01       	movw	r24, r28
    15c6:	01 96       	adiw	r24, 0x01	; 1
    15c8:	4c 01       	movw	r8, r24
    15ca:	f7 01       	movw	r30, r14
    15cc:	93 81       	ldd	r25, Z+3	; 0x03
    15ce:	f6 01       	movw	r30, r12
    15d0:	93 fd       	sbrc	r25, 3
    15d2:	85 91       	lpm	r24, Z+
    15d4:	93 ff       	sbrs	r25, 3
    15d6:	81 91       	ld	r24, Z+
    15d8:	6f 01       	movw	r12, r30
    15da:	88 23       	and	r24, r24
    15dc:	09 f4       	brne	.+2      	; 0x15e0 <vfprintf+0x3a>
    15de:	ab c1       	rjmp	.+854    	; 0x1936 <vfprintf+0x390>
    15e0:	85 32       	cpi	r24, 0x25	; 37
    15e2:	39 f4       	brne	.+14     	; 0x15f2 <vfprintf+0x4c>
    15e4:	93 fd       	sbrc	r25, 3
    15e6:	85 91       	lpm	r24, Z+
    15e8:	93 ff       	sbrs	r25, 3
    15ea:	81 91       	ld	r24, Z+
    15ec:	6f 01       	movw	r12, r30
    15ee:	85 32       	cpi	r24, 0x25	; 37
    15f0:	29 f4       	brne	.+10     	; 0x15fc <vfprintf+0x56>
    15f2:	b7 01       	movw	r22, r14
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    15fa:	e7 cf       	rjmp	.-50     	; 0x15ca <vfprintf+0x24>
    15fc:	51 2c       	mov	r5, r1
    15fe:	31 2c       	mov	r3, r1
    1600:	20 e0       	ldi	r18, 0x00	; 0
    1602:	20 32       	cpi	r18, 0x20	; 32
    1604:	a0 f4       	brcc	.+40     	; 0x162e <vfprintf+0x88>
    1606:	8b 32       	cpi	r24, 0x2B	; 43
    1608:	69 f0       	breq	.+26     	; 0x1624 <vfprintf+0x7e>
    160a:	30 f4       	brcc	.+12     	; 0x1618 <vfprintf+0x72>
    160c:	80 32       	cpi	r24, 0x20	; 32
    160e:	59 f0       	breq	.+22     	; 0x1626 <vfprintf+0x80>
    1610:	83 32       	cpi	r24, 0x23	; 35
    1612:	69 f4       	brne	.+26     	; 0x162e <vfprintf+0x88>
    1614:	20 61       	ori	r18, 0x10	; 16
    1616:	2c c0       	rjmp	.+88     	; 0x1670 <vfprintf+0xca>
    1618:	8d 32       	cpi	r24, 0x2D	; 45
    161a:	39 f0       	breq	.+14     	; 0x162a <vfprintf+0x84>
    161c:	80 33       	cpi	r24, 0x30	; 48
    161e:	39 f4       	brne	.+14     	; 0x162e <vfprintf+0x88>
    1620:	21 60       	ori	r18, 0x01	; 1
    1622:	26 c0       	rjmp	.+76     	; 0x1670 <vfprintf+0xca>
    1624:	22 60       	ori	r18, 0x02	; 2
    1626:	24 60       	ori	r18, 0x04	; 4
    1628:	23 c0       	rjmp	.+70     	; 0x1670 <vfprintf+0xca>
    162a:	28 60       	ori	r18, 0x08	; 8
    162c:	21 c0       	rjmp	.+66     	; 0x1670 <vfprintf+0xca>
    162e:	27 fd       	sbrc	r18, 7
    1630:	27 c0       	rjmp	.+78     	; 0x1680 <vfprintf+0xda>
    1632:	30 ed       	ldi	r19, 0xD0	; 208
    1634:	38 0f       	add	r19, r24
    1636:	3a 30       	cpi	r19, 0x0A	; 10
    1638:	78 f4       	brcc	.+30     	; 0x1658 <vfprintf+0xb2>
    163a:	26 ff       	sbrs	r18, 6
    163c:	06 c0       	rjmp	.+12     	; 0x164a <vfprintf+0xa4>
    163e:	fa e0       	ldi	r31, 0x0A	; 10
    1640:	5f 9e       	mul	r5, r31
    1642:	30 0d       	add	r19, r0
    1644:	11 24       	eor	r1, r1
    1646:	53 2e       	mov	r5, r19
    1648:	13 c0       	rjmp	.+38     	; 0x1670 <vfprintf+0xca>
    164a:	8a e0       	ldi	r24, 0x0A	; 10
    164c:	38 9e       	mul	r3, r24
    164e:	30 0d       	add	r19, r0
    1650:	11 24       	eor	r1, r1
    1652:	33 2e       	mov	r3, r19
    1654:	20 62       	ori	r18, 0x20	; 32
    1656:	0c c0       	rjmp	.+24     	; 0x1670 <vfprintf+0xca>
    1658:	8e 32       	cpi	r24, 0x2E	; 46
    165a:	21 f4       	brne	.+8      	; 0x1664 <vfprintf+0xbe>
    165c:	26 fd       	sbrc	r18, 6
    165e:	6b c1       	rjmp	.+726    	; 0x1936 <vfprintf+0x390>
    1660:	20 64       	ori	r18, 0x40	; 64
    1662:	06 c0       	rjmp	.+12     	; 0x1670 <vfprintf+0xca>
    1664:	8c 36       	cpi	r24, 0x6C	; 108
    1666:	11 f4       	brne	.+4      	; 0x166c <vfprintf+0xc6>
    1668:	20 68       	ori	r18, 0x80	; 128
    166a:	02 c0       	rjmp	.+4      	; 0x1670 <vfprintf+0xca>
    166c:	88 36       	cpi	r24, 0x68	; 104
    166e:	41 f4       	brne	.+16     	; 0x1680 <vfprintf+0xda>
    1670:	f6 01       	movw	r30, r12
    1672:	93 fd       	sbrc	r25, 3
    1674:	85 91       	lpm	r24, Z+
    1676:	93 ff       	sbrs	r25, 3
    1678:	81 91       	ld	r24, Z+
    167a:	6f 01       	movw	r12, r30
    167c:	81 11       	cpse	r24, r1
    167e:	c1 cf       	rjmp	.-126    	; 0x1602 <vfprintf+0x5c>
    1680:	98 2f       	mov	r25, r24
    1682:	9f 7d       	andi	r25, 0xDF	; 223
    1684:	95 54       	subi	r25, 0x45	; 69
    1686:	93 30       	cpi	r25, 0x03	; 3
    1688:	28 f4       	brcc	.+10     	; 0x1694 <vfprintf+0xee>
    168a:	0c 5f       	subi	r16, 0xFC	; 252
    168c:	1f 4f       	sbci	r17, 0xFF	; 255
    168e:	ff e3       	ldi	r31, 0x3F	; 63
    1690:	f9 83       	std	Y+1, r31	; 0x01
    1692:	0d c0       	rjmp	.+26     	; 0x16ae <vfprintf+0x108>
    1694:	83 36       	cpi	r24, 0x63	; 99
    1696:	31 f0       	breq	.+12     	; 0x16a4 <vfprintf+0xfe>
    1698:	83 37       	cpi	r24, 0x73	; 115
    169a:	71 f0       	breq	.+28     	; 0x16b8 <vfprintf+0x112>
    169c:	83 35       	cpi	r24, 0x53	; 83
    169e:	09 f0       	breq	.+2      	; 0x16a2 <vfprintf+0xfc>
    16a0:	5b c0       	rjmp	.+182    	; 0x1758 <vfprintf+0x1b2>
    16a2:	22 c0       	rjmp	.+68     	; 0x16e8 <vfprintf+0x142>
    16a4:	f8 01       	movw	r30, r16
    16a6:	80 81       	ld	r24, Z
    16a8:	89 83       	std	Y+1, r24	; 0x01
    16aa:	0e 5f       	subi	r16, 0xFE	; 254
    16ac:	1f 4f       	sbci	r17, 0xFF	; 255
    16ae:	44 24       	eor	r4, r4
    16b0:	43 94       	inc	r4
    16b2:	51 2c       	mov	r5, r1
    16b4:	54 01       	movw	r10, r8
    16b6:	15 c0       	rjmp	.+42     	; 0x16e2 <vfprintf+0x13c>
    16b8:	38 01       	movw	r6, r16
    16ba:	f2 e0       	ldi	r31, 0x02	; 2
    16bc:	6f 0e       	add	r6, r31
    16be:	71 1c       	adc	r7, r1
    16c0:	f8 01       	movw	r30, r16
    16c2:	a0 80       	ld	r10, Z
    16c4:	b1 80       	ldd	r11, Z+1	; 0x01
    16c6:	26 ff       	sbrs	r18, 6
    16c8:	03 c0       	rjmp	.+6      	; 0x16d0 <vfprintf+0x12a>
    16ca:	65 2d       	mov	r22, r5
    16cc:	70 e0       	ldi	r23, 0x00	; 0
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <vfprintf+0x12e>
    16d0:	6f ef       	ldi	r22, 0xFF	; 255
    16d2:	7f ef       	ldi	r23, 0xFF	; 255
    16d4:	c5 01       	movw	r24, r10
    16d6:	2c 87       	std	Y+12, r18	; 0x0c
    16d8:	0e 94 b0 0c 	call	0x1960	; 0x1960 <strnlen>
    16dc:	2c 01       	movw	r4, r24
    16de:	83 01       	movw	r16, r6
    16e0:	2c 85       	ldd	r18, Y+12	; 0x0c
    16e2:	2f 77       	andi	r18, 0x7F	; 127
    16e4:	22 2e       	mov	r2, r18
    16e6:	17 c0       	rjmp	.+46     	; 0x1716 <vfprintf+0x170>
    16e8:	38 01       	movw	r6, r16
    16ea:	f2 e0       	ldi	r31, 0x02	; 2
    16ec:	6f 0e       	add	r6, r31
    16ee:	71 1c       	adc	r7, r1
    16f0:	f8 01       	movw	r30, r16
    16f2:	a0 80       	ld	r10, Z
    16f4:	b1 80       	ldd	r11, Z+1	; 0x01
    16f6:	26 ff       	sbrs	r18, 6
    16f8:	03 c0       	rjmp	.+6      	; 0x1700 <vfprintf+0x15a>
    16fa:	65 2d       	mov	r22, r5
    16fc:	70 e0       	ldi	r23, 0x00	; 0
    16fe:	02 c0       	rjmp	.+4      	; 0x1704 <vfprintf+0x15e>
    1700:	6f ef       	ldi	r22, 0xFF	; 255
    1702:	7f ef       	ldi	r23, 0xFF	; 255
    1704:	c5 01       	movw	r24, r10
    1706:	2c 87       	std	Y+12, r18	; 0x0c
    1708:	0e 94 a5 0c 	call	0x194a	; 0x194a <strnlen_P>
    170c:	2c 01       	movw	r4, r24
    170e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1710:	20 68       	ori	r18, 0x80	; 128
    1712:	22 2e       	mov	r2, r18
    1714:	83 01       	movw	r16, r6
    1716:	23 fc       	sbrc	r2, 3
    1718:	1b c0       	rjmp	.+54     	; 0x1750 <vfprintf+0x1aa>
    171a:	83 2d       	mov	r24, r3
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	48 16       	cp	r4, r24
    1720:	59 06       	cpc	r5, r25
    1722:	b0 f4       	brcc	.+44     	; 0x1750 <vfprintf+0x1aa>
    1724:	b7 01       	movw	r22, r14
    1726:	80 e2       	ldi	r24, 0x20	; 32
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    172e:	3a 94       	dec	r3
    1730:	f4 cf       	rjmp	.-24     	; 0x171a <vfprintf+0x174>
    1732:	f5 01       	movw	r30, r10
    1734:	27 fc       	sbrc	r2, 7
    1736:	85 91       	lpm	r24, Z+
    1738:	27 fe       	sbrs	r2, 7
    173a:	81 91       	ld	r24, Z+
    173c:	5f 01       	movw	r10, r30
    173e:	b7 01       	movw	r22, r14
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    1746:	31 10       	cpse	r3, r1
    1748:	3a 94       	dec	r3
    174a:	f1 e0       	ldi	r31, 0x01	; 1
    174c:	4f 1a       	sub	r4, r31
    174e:	51 08       	sbc	r5, r1
    1750:	41 14       	cp	r4, r1
    1752:	51 04       	cpc	r5, r1
    1754:	71 f7       	brne	.-36     	; 0x1732 <vfprintf+0x18c>
    1756:	e5 c0       	rjmp	.+458    	; 0x1922 <vfprintf+0x37c>
    1758:	84 36       	cpi	r24, 0x64	; 100
    175a:	11 f0       	breq	.+4      	; 0x1760 <vfprintf+0x1ba>
    175c:	89 36       	cpi	r24, 0x69	; 105
    175e:	39 f5       	brne	.+78     	; 0x17ae <vfprintf+0x208>
    1760:	f8 01       	movw	r30, r16
    1762:	27 ff       	sbrs	r18, 7
    1764:	07 c0       	rjmp	.+14     	; 0x1774 <vfprintf+0x1ce>
    1766:	60 81       	ld	r22, Z
    1768:	71 81       	ldd	r23, Z+1	; 0x01
    176a:	82 81       	ldd	r24, Z+2	; 0x02
    176c:	93 81       	ldd	r25, Z+3	; 0x03
    176e:	0c 5f       	subi	r16, 0xFC	; 252
    1770:	1f 4f       	sbci	r17, 0xFF	; 255
    1772:	08 c0       	rjmp	.+16     	; 0x1784 <vfprintf+0x1de>
    1774:	60 81       	ld	r22, Z
    1776:	71 81       	ldd	r23, Z+1	; 0x01
    1778:	07 2e       	mov	r0, r23
    177a:	00 0c       	add	r0, r0
    177c:	88 0b       	sbc	r24, r24
    177e:	99 0b       	sbc	r25, r25
    1780:	0e 5f       	subi	r16, 0xFE	; 254
    1782:	1f 4f       	sbci	r17, 0xFF	; 255
    1784:	2f 76       	andi	r18, 0x6F	; 111
    1786:	72 2e       	mov	r7, r18
    1788:	97 ff       	sbrs	r25, 7
    178a:	09 c0       	rjmp	.+18     	; 0x179e <vfprintf+0x1f8>
    178c:	90 95       	com	r25
    178e:	80 95       	com	r24
    1790:	70 95       	com	r23
    1792:	61 95       	neg	r22
    1794:	7f 4f       	sbci	r23, 0xFF	; 255
    1796:	8f 4f       	sbci	r24, 0xFF	; 255
    1798:	9f 4f       	sbci	r25, 0xFF	; 255
    179a:	20 68       	ori	r18, 0x80	; 128
    179c:	72 2e       	mov	r7, r18
    179e:	2a e0       	ldi	r18, 0x0A	; 10
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	a4 01       	movw	r20, r8
    17a4:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <__ultoa_invert>
    17a8:	a8 2e       	mov	r10, r24
    17aa:	a8 18       	sub	r10, r8
    17ac:	44 c0       	rjmp	.+136    	; 0x1836 <vfprintf+0x290>
    17ae:	85 37       	cpi	r24, 0x75	; 117
    17b0:	29 f4       	brne	.+10     	; 0x17bc <vfprintf+0x216>
    17b2:	2f 7e       	andi	r18, 0xEF	; 239
    17b4:	b2 2e       	mov	r11, r18
    17b6:	2a e0       	ldi	r18, 0x0A	; 10
    17b8:	30 e0       	ldi	r19, 0x00	; 0
    17ba:	25 c0       	rjmp	.+74     	; 0x1806 <vfprintf+0x260>
    17bc:	f2 2f       	mov	r31, r18
    17be:	f9 7f       	andi	r31, 0xF9	; 249
    17c0:	bf 2e       	mov	r11, r31
    17c2:	8f 36       	cpi	r24, 0x6F	; 111
    17c4:	c1 f0       	breq	.+48     	; 0x17f6 <vfprintf+0x250>
    17c6:	18 f4       	brcc	.+6      	; 0x17ce <vfprintf+0x228>
    17c8:	88 35       	cpi	r24, 0x58	; 88
    17ca:	79 f0       	breq	.+30     	; 0x17ea <vfprintf+0x244>
    17cc:	b4 c0       	rjmp	.+360    	; 0x1936 <vfprintf+0x390>
    17ce:	80 37       	cpi	r24, 0x70	; 112
    17d0:	19 f0       	breq	.+6      	; 0x17d8 <vfprintf+0x232>
    17d2:	88 37       	cpi	r24, 0x78	; 120
    17d4:	21 f0       	breq	.+8      	; 0x17de <vfprintf+0x238>
    17d6:	af c0       	rjmp	.+350    	; 0x1936 <vfprintf+0x390>
    17d8:	2f 2f       	mov	r18, r31
    17da:	20 61       	ori	r18, 0x10	; 16
    17dc:	b2 2e       	mov	r11, r18
    17de:	b4 fe       	sbrs	r11, 4
    17e0:	0d c0       	rjmp	.+26     	; 0x17fc <vfprintf+0x256>
    17e2:	8b 2d       	mov	r24, r11
    17e4:	84 60       	ori	r24, 0x04	; 4
    17e6:	b8 2e       	mov	r11, r24
    17e8:	09 c0       	rjmp	.+18     	; 0x17fc <vfprintf+0x256>
    17ea:	24 ff       	sbrs	r18, 4
    17ec:	0a c0       	rjmp	.+20     	; 0x1802 <vfprintf+0x25c>
    17ee:	9f 2f       	mov	r25, r31
    17f0:	96 60       	ori	r25, 0x06	; 6
    17f2:	b9 2e       	mov	r11, r25
    17f4:	06 c0       	rjmp	.+12     	; 0x1802 <vfprintf+0x25c>
    17f6:	28 e0       	ldi	r18, 0x08	; 8
    17f8:	30 e0       	ldi	r19, 0x00	; 0
    17fa:	05 c0       	rjmp	.+10     	; 0x1806 <vfprintf+0x260>
    17fc:	20 e1       	ldi	r18, 0x10	; 16
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <vfprintf+0x260>
    1802:	20 e1       	ldi	r18, 0x10	; 16
    1804:	32 e0       	ldi	r19, 0x02	; 2
    1806:	f8 01       	movw	r30, r16
    1808:	b7 fe       	sbrs	r11, 7
    180a:	07 c0       	rjmp	.+14     	; 0x181a <vfprintf+0x274>
    180c:	60 81       	ld	r22, Z
    180e:	71 81       	ldd	r23, Z+1	; 0x01
    1810:	82 81       	ldd	r24, Z+2	; 0x02
    1812:	93 81       	ldd	r25, Z+3	; 0x03
    1814:	0c 5f       	subi	r16, 0xFC	; 252
    1816:	1f 4f       	sbci	r17, 0xFF	; 255
    1818:	06 c0       	rjmp	.+12     	; 0x1826 <vfprintf+0x280>
    181a:	60 81       	ld	r22, Z
    181c:	71 81       	ldd	r23, Z+1	; 0x01
    181e:	80 e0       	ldi	r24, 0x00	; 0
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	0e 5f       	subi	r16, 0xFE	; 254
    1824:	1f 4f       	sbci	r17, 0xFF	; 255
    1826:	a4 01       	movw	r20, r8
    1828:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <__ultoa_invert>
    182c:	a8 2e       	mov	r10, r24
    182e:	a8 18       	sub	r10, r8
    1830:	fb 2d       	mov	r31, r11
    1832:	ff 77       	andi	r31, 0x7F	; 127
    1834:	7f 2e       	mov	r7, r31
    1836:	76 fe       	sbrs	r7, 6
    1838:	0b c0       	rjmp	.+22     	; 0x1850 <vfprintf+0x2aa>
    183a:	37 2d       	mov	r19, r7
    183c:	3e 7f       	andi	r19, 0xFE	; 254
    183e:	a5 14       	cp	r10, r5
    1840:	50 f4       	brcc	.+20     	; 0x1856 <vfprintf+0x2b0>
    1842:	74 fe       	sbrs	r7, 4
    1844:	0a c0       	rjmp	.+20     	; 0x185a <vfprintf+0x2b4>
    1846:	72 fc       	sbrc	r7, 2
    1848:	08 c0       	rjmp	.+16     	; 0x185a <vfprintf+0x2b4>
    184a:	37 2d       	mov	r19, r7
    184c:	3e 7e       	andi	r19, 0xEE	; 238
    184e:	05 c0       	rjmp	.+10     	; 0x185a <vfprintf+0x2b4>
    1850:	ba 2c       	mov	r11, r10
    1852:	37 2d       	mov	r19, r7
    1854:	03 c0       	rjmp	.+6      	; 0x185c <vfprintf+0x2b6>
    1856:	ba 2c       	mov	r11, r10
    1858:	01 c0       	rjmp	.+2      	; 0x185c <vfprintf+0x2b6>
    185a:	b5 2c       	mov	r11, r5
    185c:	34 ff       	sbrs	r19, 4
    185e:	0d c0       	rjmp	.+26     	; 0x187a <vfprintf+0x2d4>
    1860:	fe 01       	movw	r30, r28
    1862:	ea 0d       	add	r30, r10
    1864:	f1 1d       	adc	r31, r1
    1866:	80 81       	ld	r24, Z
    1868:	80 33       	cpi	r24, 0x30	; 48
    186a:	11 f4       	brne	.+4      	; 0x1870 <vfprintf+0x2ca>
    186c:	39 7e       	andi	r19, 0xE9	; 233
    186e:	09 c0       	rjmp	.+18     	; 0x1882 <vfprintf+0x2dc>
    1870:	32 ff       	sbrs	r19, 2
    1872:	06 c0       	rjmp	.+12     	; 0x1880 <vfprintf+0x2da>
    1874:	b3 94       	inc	r11
    1876:	b3 94       	inc	r11
    1878:	04 c0       	rjmp	.+8      	; 0x1882 <vfprintf+0x2dc>
    187a:	83 2f       	mov	r24, r19
    187c:	86 78       	andi	r24, 0x86	; 134
    187e:	09 f0       	breq	.+2      	; 0x1882 <vfprintf+0x2dc>
    1880:	b3 94       	inc	r11
    1882:	33 fd       	sbrc	r19, 3
    1884:	13 c0       	rjmp	.+38     	; 0x18ac <vfprintf+0x306>
    1886:	30 ff       	sbrs	r19, 0
    1888:	06 c0       	rjmp	.+12     	; 0x1896 <vfprintf+0x2f0>
    188a:	5a 2c       	mov	r5, r10
    188c:	b3 14       	cp	r11, r3
    188e:	18 f4       	brcc	.+6      	; 0x1896 <vfprintf+0x2f0>
    1890:	53 0c       	add	r5, r3
    1892:	5b 18       	sub	r5, r11
    1894:	b3 2c       	mov	r11, r3
    1896:	b3 14       	cp	r11, r3
    1898:	68 f4       	brcc	.+26     	; 0x18b4 <vfprintf+0x30e>
    189a:	b7 01       	movw	r22, r14
    189c:	80 e2       	ldi	r24, 0x20	; 32
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	3c 87       	std	Y+12, r19	; 0x0c
    18a2:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    18a6:	b3 94       	inc	r11
    18a8:	3c 85       	ldd	r19, Y+12	; 0x0c
    18aa:	f5 cf       	rjmp	.-22     	; 0x1896 <vfprintf+0x2f0>
    18ac:	b3 14       	cp	r11, r3
    18ae:	10 f4       	brcc	.+4      	; 0x18b4 <vfprintf+0x30e>
    18b0:	3b 18       	sub	r3, r11
    18b2:	01 c0       	rjmp	.+2      	; 0x18b6 <vfprintf+0x310>
    18b4:	31 2c       	mov	r3, r1
    18b6:	34 ff       	sbrs	r19, 4
    18b8:	12 c0       	rjmp	.+36     	; 0x18de <vfprintf+0x338>
    18ba:	b7 01       	movw	r22, r14
    18bc:	80 e3       	ldi	r24, 0x30	; 48
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	3c 87       	std	Y+12, r19	; 0x0c
    18c2:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    18c6:	3c 85       	ldd	r19, Y+12	; 0x0c
    18c8:	32 ff       	sbrs	r19, 2
    18ca:	17 c0       	rjmp	.+46     	; 0x18fa <vfprintf+0x354>
    18cc:	31 fd       	sbrc	r19, 1
    18ce:	03 c0       	rjmp	.+6      	; 0x18d6 <vfprintf+0x330>
    18d0:	88 e7       	ldi	r24, 0x78	; 120
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	02 c0       	rjmp	.+4      	; 0x18da <vfprintf+0x334>
    18d6:	88 e5       	ldi	r24, 0x58	; 88
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	b7 01       	movw	r22, r14
    18dc:	0c c0       	rjmp	.+24     	; 0x18f6 <vfprintf+0x350>
    18de:	83 2f       	mov	r24, r19
    18e0:	86 78       	andi	r24, 0x86	; 134
    18e2:	59 f0       	breq	.+22     	; 0x18fa <vfprintf+0x354>
    18e4:	31 ff       	sbrs	r19, 1
    18e6:	02 c0       	rjmp	.+4      	; 0x18ec <vfprintf+0x346>
    18e8:	8b e2       	ldi	r24, 0x2B	; 43
    18ea:	01 c0       	rjmp	.+2      	; 0x18ee <vfprintf+0x348>
    18ec:	80 e2       	ldi	r24, 0x20	; 32
    18ee:	37 fd       	sbrc	r19, 7
    18f0:	8d e2       	ldi	r24, 0x2D	; 45
    18f2:	b7 01       	movw	r22, r14
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    18fa:	a5 14       	cp	r10, r5
    18fc:	38 f4       	brcc	.+14     	; 0x190c <vfprintf+0x366>
    18fe:	b7 01       	movw	r22, r14
    1900:	80 e3       	ldi	r24, 0x30	; 48
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    1908:	5a 94       	dec	r5
    190a:	f7 cf       	rjmp	.-18     	; 0x18fa <vfprintf+0x354>
    190c:	aa 94       	dec	r10
    190e:	f4 01       	movw	r30, r8
    1910:	ea 0d       	add	r30, r10
    1912:	f1 1d       	adc	r31, r1
    1914:	80 81       	ld	r24, Z
    1916:	b7 01       	movw	r22, r14
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    191e:	a1 10       	cpse	r10, r1
    1920:	f5 cf       	rjmp	.-22     	; 0x190c <vfprintf+0x366>
    1922:	33 20       	and	r3, r3
    1924:	09 f4       	brne	.+2      	; 0x1928 <vfprintf+0x382>
    1926:	51 ce       	rjmp	.-862    	; 0x15ca <vfprintf+0x24>
    1928:	b7 01       	movw	r22, r14
    192a:	80 e2       	ldi	r24, 0x20	; 32
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	0e 94 bb 0c 	call	0x1976	; 0x1976 <fputc>
    1932:	3a 94       	dec	r3
    1934:	f6 cf       	rjmp	.-20     	; 0x1922 <vfprintf+0x37c>
    1936:	f7 01       	movw	r30, r14
    1938:	86 81       	ldd	r24, Z+6	; 0x06
    193a:	97 81       	ldd	r25, Z+7	; 0x07
    193c:	02 c0       	rjmp	.+4      	; 0x1942 <vfprintf+0x39c>
    193e:	8f ef       	ldi	r24, 0xFF	; 255
    1940:	9f ef       	ldi	r25, 0xFF	; 255
    1942:	2c 96       	adiw	r28, 0x0c	; 12
    1944:	e2 e1       	ldi	r30, 0x12	; 18
    1946:	0c 94 6d 0d 	jmp	0x1ada	; 0x1ada <__epilogue_restores__>

0000194a <strnlen_P>:
    194a:	fc 01       	movw	r30, r24
    194c:	05 90       	lpm	r0, Z+
    194e:	61 50       	subi	r22, 0x01	; 1
    1950:	70 40       	sbci	r23, 0x00	; 0
    1952:	01 10       	cpse	r0, r1
    1954:	d8 f7       	brcc	.-10     	; 0x194c <strnlen_P+0x2>
    1956:	80 95       	com	r24
    1958:	90 95       	com	r25
    195a:	8e 0f       	add	r24, r30
    195c:	9f 1f       	adc	r25, r31
    195e:	08 95       	ret

00001960 <strnlen>:
    1960:	fc 01       	movw	r30, r24
    1962:	61 50       	subi	r22, 0x01	; 1
    1964:	70 40       	sbci	r23, 0x00	; 0
    1966:	01 90       	ld	r0, Z+
    1968:	01 10       	cpse	r0, r1
    196a:	d8 f7       	brcc	.-10     	; 0x1962 <strnlen+0x2>
    196c:	80 95       	com	r24
    196e:	90 95       	com	r25
    1970:	8e 0f       	add	r24, r30
    1972:	9f 1f       	adc	r25, r31
    1974:	08 95       	ret

00001976 <fputc>:
    1976:	0f 93       	push	r16
    1978:	1f 93       	push	r17
    197a:	cf 93       	push	r28
    197c:	df 93       	push	r29
    197e:	fb 01       	movw	r30, r22
    1980:	23 81       	ldd	r18, Z+3	; 0x03
    1982:	21 fd       	sbrc	r18, 1
    1984:	03 c0       	rjmp	.+6      	; 0x198c <fputc+0x16>
    1986:	8f ef       	ldi	r24, 0xFF	; 255
    1988:	9f ef       	ldi	r25, 0xFF	; 255
    198a:	28 c0       	rjmp	.+80     	; 0x19dc <fputc+0x66>
    198c:	22 ff       	sbrs	r18, 2
    198e:	16 c0       	rjmp	.+44     	; 0x19bc <fputc+0x46>
    1990:	46 81       	ldd	r20, Z+6	; 0x06
    1992:	57 81       	ldd	r21, Z+7	; 0x07
    1994:	24 81       	ldd	r18, Z+4	; 0x04
    1996:	35 81       	ldd	r19, Z+5	; 0x05
    1998:	42 17       	cp	r20, r18
    199a:	53 07       	cpc	r21, r19
    199c:	44 f4       	brge	.+16     	; 0x19ae <fputc+0x38>
    199e:	a0 81       	ld	r26, Z
    19a0:	b1 81       	ldd	r27, Z+1	; 0x01
    19a2:	9d 01       	movw	r18, r26
    19a4:	2f 5f       	subi	r18, 0xFF	; 255
    19a6:	3f 4f       	sbci	r19, 0xFF	; 255
    19a8:	31 83       	std	Z+1, r19	; 0x01
    19aa:	20 83       	st	Z, r18
    19ac:	8c 93       	st	X, r24
    19ae:	26 81       	ldd	r18, Z+6	; 0x06
    19b0:	37 81       	ldd	r19, Z+7	; 0x07
    19b2:	2f 5f       	subi	r18, 0xFF	; 255
    19b4:	3f 4f       	sbci	r19, 0xFF	; 255
    19b6:	37 83       	std	Z+7, r19	; 0x07
    19b8:	26 83       	std	Z+6, r18	; 0x06
    19ba:	10 c0       	rjmp	.+32     	; 0x19dc <fputc+0x66>
    19bc:	eb 01       	movw	r28, r22
    19be:	09 2f       	mov	r16, r25
    19c0:	18 2f       	mov	r17, r24
    19c2:	00 84       	ldd	r0, Z+8	; 0x08
    19c4:	f1 85       	ldd	r31, Z+9	; 0x09
    19c6:	e0 2d       	mov	r30, r0
    19c8:	09 95       	icall
    19ca:	89 2b       	or	r24, r25
    19cc:	e1 f6       	brne	.-72     	; 0x1986 <fputc+0x10>
    19ce:	8e 81       	ldd	r24, Y+6	; 0x06
    19d0:	9f 81       	ldd	r25, Y+7	; 0x07
    19d2:	01 96       	adiw	r24, 0x01	; 1
    19d4:	9f 83       	std	Y+7, r25	; 0x07
    19d6:	8e 83       	std	Y+6, r24	; 0x06
    19d8:	81 2f       	mov	r24, r17
    19da:	90 2f       	mov	r25, r16
    19dc:	df 91       	pop	r29
    19de:	cf 91       	pop	r28
    19e0:	1f 91       	pop	r17
    19e2:	0f 91       	pop	r16
    19e4:	08 95       	ret

000019e6 <__ultoa_invert>:
    19e6:	fa 01       	movw	r30, r20
    19e8:	aa 27       	eor	r26, r26
    19ea:	28 30       	cpi	r18, 0x08	; 8
    19ec:	51 f1       	breq	.+84     	; 0x1a42 <__ultoa_invert+0x5c>
    19ee:	20 31       	cpi	r18, 0x10	; 16
    19f0:	81 f1       	breq	.+96     	; 0x1a52 <__ultoa_invert+0x6c>
    19f2:	e8 94       	clt
    19f4:	6f 93       	push	r22
    19f6:	6e 7f       	andi	r22, 0xFE	; 254
    19f8:	6e 5f       	subi	r22, 0xFE	; 254
    19fa:	7f 4f       	sbci	r23, 0xFF	; 255
    19fc:	8f 4f       	sbci	r24, 0xFF	; 255
    19fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1a00:	af 4f       	sbci	r26, 0xFF	; 255
    1a02:	b1 e0       	ldi	r27, 0x01	; 1
    1a04:	3e d0       	rcall	.+124    	; 0x1a82 <__ultoa_invert+0x9c>
    1a06:	b4 e0       	ldi	r27, 0x04	; 4
    1a08:	3c d0       	rcall	.+120    	; 0x1a82 <__ultoa_invert+0x9c>
    1a0a:	67 0f       	add	r22, r23
    1a0c:	78 1f       	adc	r23, r24
    1a0e:	89 1f       	adc	r24, r25
    1a10:	9a 1f       	adc	r25, r26
    1a12:	a1 1d       	adc	r26, r1
    1a14:	68 0f       	add	r22, r24
    1a16:	79 1f       	adc	r23, r25
    1a18:	8a 1f       	adc	r24, r26
    1a1a:	91 1d       	adc	r25, r1
    1a1c:	a1 1d       	adc	r26, r1
    1a1e:	6a 0f       	add	r22, r26
    1a20:	71 1d       	adc	r23, r1
    1a22:	81 1d       	adc	r24, r1
    1a24:	91 1d       	adc	r25, r1
    1a26:	a1 1d       	adc	r26, r1
    1a28:	20 d0       	rcall	.+64     	; 0x1a6a <__ultoa_invert+0x84>
    1a2a:	09 f4       	brne	.+2      	; 0x1a2e <__ultoa_invert+0x48>
    1a2c:	68 94       	set
    1a2e:	3f 91       	pop	r19
    1a30:	2a e0       	ldi	r18, 0x0A	; 10
    1a32:	26 9f       	mul	r18, r22
    1a34:	11 24       	eor	r1, r1
    1a36:	30 19       	sub	r19, r0
    1a38:	30 5d       	subi	r19, 0xD0	; 208
    1a3a:	31 93       	st	Z+, r19
    1a3c:	de f6       	brtc	.-74     	; 0x19f4 <__ultoa_invert+0xe>
    1a3e:	cf 01       	movw	r24, r30
    1a40:	08 95       	ret
    1a42:	46 2f       	mov	r20, r22
    1a44:	47 70       	andi	r20, 0x07	; 7
    1a46:	40 5d       	subi	r20, 0xD0	; 208
    1a48:	41 93       	st	Z+, r20
    1a4a:	b3 e0       	ldi	r27, 0x03	; 3
    1a4c:	0f d0       	rcall	.+30     	; 0x1a6c <__ultoa_invert+0x86>
    1a4e:	c9 f7       	brne	.-14     	; 0x1a42 <__ultoa_invert+0x5c>
    1a50:	f6 cf       	rjmp	.-20     	; 0x1a3e <__ultoa_invert+0x58>
    1a52:	46 2f       	mov	r20, r22
    1a54:	4f 70       	andi	r20, 0x0F	; 15
    1a56:	40 5d       	subi	r20, 0xD0	; 208
    1a58:	4a 33       	cpi	r20, 0x3A	; 58
    1a5a:	18 f0       	brcs	.+6      	; 0x1a62 <__ultoa_invert+0x7c>
    1a5c:	49 5d       	subi	r20, 0xD9	; 217
    1a5e:	31 fd       	sbrc	r19, 1
    1a60:	40 52       	subi	r20, 0x20	; 32
    1a62:	41 93       	st	Z+, r20
    1a64:	02 d0       	rcall	.+4      	; 0x1a6a <__ultoa_invert+0x84>
    1a66:	a9 f7       	brne	.-22     	; 0x1a52 <__ultoa_invert+0x6c>
    1a68:	ea cf       	rjmp	.-44     	; 0x1a3e <__ultoa_invert+0x58>
    1a6a:	b4 e0       	ldi	r27, 0x04	; 4
    1a6c:	a6 95       	lsr	r26
    1a6e:	97 95       	ror	r25
    1a70:	87 95       	ror	r24
    1a72:	77 95       	ror	r23
    1a74:	67 95       	ror	r22
    1a76:	ba 95       	dec	r27
    1a78:	c9 f7       	brne	.-14     	; 0x1a6c <__ultoa_invert+0x86>
    1a7a:	00 97       	sbiw	r24, 0x00	; 0
    1a7c:	61 05       	cpc	r22, r1
    1a7e:	71 05       	cpc	r23, r1
    1a80:	08 95       	ret
    1a82:	9b 01       	movw	r18, r22
    1a84:	ac 01       	movw	r20, r24
    1a86:	0a 2e       	mov	r0, r26
    1a88:	06 94       	lsr	r0
    1a8a:	57 95       	ror	r21
    1a8c:	47 95       	ror	r20
    1a8e:	37 95       	ror	r19
    1a90:	27 95       	ror	r18
    1a92:	ba 95       	dec	r27
    1a94:	c9 f7       	brne	.-14     	; 0x1a88 <__ultoa_invert+0xa2>
    1a96:	62 0f       	add	r22, r18
    1a98:	73 1f       	adc	r23, r19
    1a9a:	84 1f       	adc	r24, r20
    1a9c:	95 1f       	adc	r25, r21
    1a9e:	a0 1d       	adc	r26, r0
    1aa0:	08 95       	ret

00001aa2 <__prologue_saves__>:
    1aa2:	2f 92       	push	r2
    1aa4:	3f 92       	push	r3
    1aa6:	4f 92       	push	r4
    1aa8:	5f 92       	push	r5
    1aaa:	6f 92       	push	r6
    1aac:	7f 92       	push	r7
    1aae:	8f 92       	push	r8
    1ab0:	9f 92       	push	r9
    1ab2:	af 92       	push	r10
    1ab4:	bf 92       	push	r11
    1ab6:	cf 92       	push	r12
    1ab8:	df 92       	push	r13
    1aba:	ef 92       	push	r14
    1abc:	ff 92       	push	r15
    1abe:	0f 93       	push	r16
    1ac0:	1f 93       	push	r17
    1ac2:	cf 93       	push	r28
    1ac4:	df 93       	push	r29
    1ac6:	cd b7       	in	r28, 0x3d	; 61
    1ac8:	de b7       	in	r29, 0x3e	; 62
    1aca:	ca 1b       	sub	r28, r26
    1acc:	db 0b       	sbc	r29, r27
    1ace:	0f b6       	in	r0, 0x3f	; 63
    1ad0:	f8 94       	cli
    1ad2:	de bf       	out	0x3e, r29	; 62
    1ad4:	0f be       	out	0x3f, r0	; 63
    1ad6:	cd bf       	out	0x3d, r28	; 61
    1ad8:	09 94       	ijmp

00001ada <__epilogue_restores__>:
    1ada:	2a 88       	ldd	r2, Y+18	; 0x12
    1adc:	39 88       	ldd	r3, Y+17	; 0x11
    1ade:	48 88       	ldd	r4, Y+16	; 0x10
    1ae0:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ae2:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ae4:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ae6:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ae8:	9b 84       	ldd	r9, Y+11	; 0x0b
    1aea:	aa 84       	ldd	r10, Y+10	; 0x0a
    1aec:	b9 84       	ldd	r11, Y+9	; 0x09
    1aee:	c8 84       	ldd	r12, Y+8	; 0x08
    1af0:	df 80       	ldd	r13, Y+7	; 0x07
    1af2:	ee 80       	ldd	r14, Y+6	; 0x06
    1af4:	fd 80       	ldd	r15, Y+5	; 0x05
    1af6:	0c 81       	ldd	r16, Y+4	; 0x04
    1af8:	1b 81       	ldd	r17, Y+3	; 0x03
    1afa:	aa 81       	ldd	r26, Y+2	; 0x02
    1afc:	b9 81       	ldd	r27, Y+1	; 0x01
    1afe:	ce 0f       	add	r28, r30
    1b00:	d1 1d       	adc	r29, r1
    1b02:	0f b6       	in	r0, 0x3f	; 63
    1b04:	f8 94       	cli
    1b06:	de bf       	out	0x3e, r29	; 62
    1b08:	0f be       	out	0x3f, r0	; 63
    1b0a:	cd bf       	out	0x3d, r28	; 61
    1b0c:	ed 01       	movw	r28, r26
    1b0e:	08 95       	ret

00001b10 <_exit>:
    1b10:	f8 94       	cli

00001b12 <__stop_program>:
    1b12:	ff cf       	rjmp	.-2      	; 0x1b12 <__stop_program>
